{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./lib/parameters.js","webpack:///external \"nw.gui\"","webpack:///external \"path\"","webpack:///external \"fs\"","webpack:///./lib/2_core.js","webpack:///external \"child_process\"","webpack:///./lib/3_localization.js","webpack:///./lib/4_utils.js","webpack:///./lib/5_loadDLL.js","webpack:///./lib sync","webpack:///./lib/6_ScreenConfig.js","webpack:///./lib/7_Graphics.js","webpack:///./lib/8_Scene_Boot.js","webpack:///./lib/9_SceneManager.js","webpack:///./lib/10_ScreenManager.js","webpack:///./lib/11_Game_System.js","webpack:///./lib/12_Window_Options.js","webpack:///./lib/13_Window_ResolutionList.js","webpack:///./lib/14_ResizeGraphicsObjects.js","webpack:///./lib/15_Game_Interpreter.js","webpack:///./lib/1_public.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","parameters","$plugins","filter","description","contains","length","require","RS","ScreenManager","initWithMobile","replaceBy","mod","cb","item","JSON","stringify","replace","screen","availWidth","availHeight","window","outerWidth","outerHeight","jsonParse","Params","settings","resolutionQualityOnMobile","mobileGraphicsArray","readManifestFile","Utils","RPGMAKER_VERSION","isNwjs","options","isAutoSyncManifest","fs","path","dirname","process","mainModule","filename","packageJsonPath","join","existsSync","config","parse","readFileSync","fullscreen","fullscreenFlag","defaultScreenSize","x","width","y","height","ptCustomScreenSize","toString","Window","on","f","isFullscreen","changeManifestFile","isWindowsTaskbarShown","switchFullScreen","toggleFullscreen","Graphics","_switchFullScreen","isFullScreen","_isFullScreen","templatePackageConfig","writeFileSync","packageConfig","restartGame","childProcess","projectPath","execFile","execPath","err","console","warn","uniqArray","data","uniqData","foundData","forEach","packData","push","this","PrivateLocalization","newLocalization","langCode","navigator","language","slice","eval","Language","type","code","lang","en","localization","getAbsolutePath","defaultPath","fileName","split","driveName","shift","isUsedNodeLibrary","pcGraphicsArray","pcGraphicsTempArray","allResolutions","platform","base","fileVersion","processArch","arch","versions","node","isOptionValid","state","alert","targetName","copyFile","items","GetDisplaySettings","error","webpackEmptyContext","req","e","Error","keys","resolve","id","ScreenConfig","initialize","apply","arguments","CustomScreenConfig","constructor","originWidth","originHeight","orientation","_originWidth","_originHeight","_orientation","_aspectRatio","getRatio","gcd","q","getSize","virtualWidth","parseInt","Math","round","getHeight","getRatioAsString","temp","Number","getWidth","newHeight","ar","parseFloat","newWidth","a","b","Point","getAvailGraphicsArray","returnType","tw","th","pt","gArray","result","maxSW","maxSH","isMobileDevice","match","customAspectRatio","sw","sh","aspectRatio","getOrientation","inner","innerWidth","innerHeight","isAvailScreenHeight","task_height","uniqWithPoint","callback","getVirtualWidth","originValue","ratio","boxWidth","floor","getVirtualHeight","boxHeight","setScreenResize","newScr","cx","cy","xPadding","yPadding","minW","minH","SceneManager","_screenWidth","_screenHeight","_boxWidth","_boxHeight","$gameMap","tileWidth","tileHeight","_renderer","autoScaling","ret","newData","pop","resizeTo","moveTo","minWidth","max","minHeight","clamp","resize","recreate","_scene","Scene_Boot","PluginManager","_scripts","initNwjs","gui","win","menu","menubar","Menu","createMacBuiltin","hideEdit","hideWindow","run","sceneClass","goto","requestUpdate","catchException","alias_Graphics_onWindowResize","_onWindowResize","nw","setPosition","alias_Scene_Boot_create","initResolution","size","mobile","defScrWidth","defScrHeight","newSize","Scene_Base","createWindowLayer","createAvailGraphicsList","createPanel","makeSpriteForPanel","color1","Window_Base","dimColor1","color2","dimColor2","sprite","Sprite","Bitmap","userAgent","bitmap","fillAll","gradientFillRect","drawText","nx","_availGraphicsList","ny","_panel","addChild","setHandler","convertScreenSize","popScene","createDisplayList","Window_ResolutionList","Window_ResolutionListForMobile","addWindow","convertWithAspectRatio","insData","convertWithNwjs","scr","getCurrentItemToPoint","convertWithOther","flushScreen","$gameSystem","_lastScreenManagerItem","index","alias_Game_System_initialize","Game_System","isValidOptionWindow","alias_Window_Options_initialize","Window_Options","_lastIndex","isResolution","symbol","isAspectRatio","processOk","commandSymbol","getConfigValue","isVolumeSymbol","volumeOffset","changeValue","alias_Window_Options_cursorRight","cursorRight","wrap","alias_Window_Options_cursorLeft","cursorLeft","statusText","idx","volumeStatusText","String","booleanStatusText","alias_Window_Options_addVolumeOptions","addVolumeOptions","addCommand","Window_Selectable","initMembers","initWithItemPoint","refresh","activate","select","_windowFrameSprite","visible","_index","_item","lineHeight","initWithAspectRatio","fullscreenData","_itemToPoint","maxItems","_data","makeItemList","uniq","isCurrentItemEnabled","isEnabled","resetFontSettings","contents","fontFace","standardFontFace","fontSize","standardFontSize","outlineColor","rgbToCssColor","outlineWidth","resetTextColor","drawItem","rect","itemRectForText","text","createContents","drawAllItems","indexOf","Sprite_Base","requestStretch","scaleX","scaleY","scale","picturePosType","dw","dh","dx","dy","TilingSprite","reqeustResizeImage","texture","frame","PIXI","Rectangle","isValidResizing","isValidScaledBattleback","opacity","_url","fileUri","folderName","_folderName","resizeImage","alias_TilingSprite__onBitmapLoad","_onBitmapLoad","Imported","YEP_BattleEngineCore","Sprite_Actor","moveToStartPosition","$","actorFunc","setActorHome","stepForward","stepBack","retreat","Spriteset_Battle","createBattleback","_battleField","margin","_back1Sprite","_back2Sprite","battleback1Bitmap","battleback2Bitmap","move","locateBattleback","sprite1","sprite2","origin","isSideView","pluginName","DTextPicture","alias_Sprite_Picture_updatePosition","Sprite_Picture","updatePosition","isAutoScaledPicture","alias_Sprite_Picture_updateScale","updateScale","updateOriginScale","picture","originSX","originSY","updateAutoScale","ignoreAutoScalePictures","_pictureId","originalViewWidth","originalPictureViewSize","originalViewHeight","alias_Sprite_Picture_update","update","anchor","alias_Scene_MenuBase_start","Scene_MenuBase","start","_backgroundSprite","alias_Window_Command_windowWidth","Window_Command","windowWidth","alias_Window_Command_lineHeight","alias_Window_Base_standardFontSize","alias_Window_Base_standardPadding","standardPadding","alias_Window_Selectable_spacing","spacing","alias_Window_Options_windowWidth","alias_Window_Options_statusWidth","statusWidth","Window_MenuCommandImpl","Window_MenuCommand","super","Window_MenuStatusImpl","Window_MenuStatus","Window_GoldImpl","Window_Gold","Window_GameEndImpl","Window_GameEnd","Window_TitleCommandImpl","Window_TitleCommand","alias_Scene_Title_start","Scene_Title","_backSprite1","_backSprite2","drawGameTitle","maxWidth","$dataSystem","gameTitle","_gameTitleSprite","alias_Scene_Gameover_start","Scene_Gameover","_backSprite","alias_Game_Interpreter_pluginCommand","Game_Interpreter","pluginCommand","command","args","RS_ScreenManager","str","k","v","Boolean","trim"],"mappings":"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","file":"RS_ScreenManager.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 20);\n","var parameters = $plugins.filter(function (i) {\r\n    return i.description.contains('<RS_ScreenManager>');\r\n});\r\n\r\nparameters = (parameters.length > 0) && parameters[0].parameters;\r\n\r\nexport default parameters;","module.exports = require(\"nw.gui\");","module.exports = require(\"path\");","module.exports = require(\"fs\");","/**\r\n * Replace by target screen width and height values.\r\n */\r\nRS.ScreenManager.initWithMobile = function () {\r\n\r\n    function replaceBy(mod, cb) {\r\n        var item = JSON.stringify(mod);\r\n        item = item.replace(\"screen.availWidth\", screen.availWidth);\r\n        item = item.replace(\"screen.availHeight\", screen.availHeight);\r\n        item = item.replace(\"window.outerWidth\", window.outerWidth);\r\n        item = item.replace(\"window.outerHeight\", window.outerHeight);\r\n        mod = RS.ScreenManager.jsonParse(item);\r\n        cb(mod);\r\n    }\r\n\r\n    replaceBy(RS.ScreenManager.Params.settings.resolutionQualityOnMobile, function (mod) {\r\n        RS.ScreenManager.Params.settings.resolutionQualityOnMobile = mod;\r\n    });\r\n\r\n    replaceBy(RS.ScreenManager.Params.settings.mobileGraphicsArray, function (mod) {\r\n        RS.ScreenManager.Params.settings.mobileGraphicsArray = mod;\r\n    });\r\n\r\n};\r\n\r\nRS.ScreenManager.initWithMobile();\r\n\r\n/**\r\n * Read a manifest file called 'package.json'.\r\n */\r\nRS.ScreenManager.readManifestFile = function () {\r\n    if (Utils.RPGMAKER_VERSION < '1.6.1') return;\r\n    if (!Utils.isNwjs()) return;\r\n    if (!RS.ScreenManager.Params.options.isAutoSyncManifest) return;\r\n    var fs = require('fs');\r\n    var path = require('path');\r\n    var dirname = path.dirname(process.mainModule.filename);\r\n    var packageJsonPath = path.join(dirname, \"package.json\");\r\n    if (fs.existsSync(packageJsonPath)) {\r\n        var packageConfig = JSON.parse(fs.readFileSync(packageJsonPath, \"utf8\"));\r\n        var config = packageConfig.window;\r\n        if (config && config.fullscreen) {\r\n            RS.ScreenManager.Params.fullscreenFlag = config.fullscreen;\r\n            RS.ScreenManager.Params.settings.defaultScreenSize.x = config.width;\r\n            RS.ScreenManager.Params.settings.defaultScreenSize.y = config.height;\r\n            RS.ScreenManager.Params.settings.ptCustomScreenSize = RS.ScreenManager.Params.settings.defaultScreenSize.toString();\r\n        }\r\n    }\r\n\r\n    var win = require('nw.gui').Window.get();\r\n\r\n    win.on('resize', function (width, height) {\r\n        var f = RS.ScreenManager.isFullscreen();\r\n        RS.ScreenManager.changeManifestFile(width, height, f);\r\n    });\r\n\r\n};\r\n\r\nRS.ScreenManager.isWindowsTaskbarShown = function () {\r\n    return screen.availHeight !== screen.height;\r\n};\r\n\r\nRS.ScreenManager.switchFullScreen = function () {\r\n    if (Utils.isNwjs()) {\r\n        var gui = require('nw.gui');\r\n        var win = gui.Window.get();\r\n        win.toggleFullscreen();\r\n    } else {\r\n        Graphics._switchFullScreen();\r\n    }\r\n};\r\n\r\nRS.ScreenManager.isFullscreen = function () {\r\n    if (Utils.isNwjs()) {\r\n        var gui = require('nw.gui');\r\n        var win = gui.Window.get();\r\n\r\n        return win.isFullScreen;\r\n\r\n    } else {\r\n        return Graphics._isFullScreen();\r\n    }\r\n};\r\n\r\n/**\r\n * Change the manifest file called 'package.json' and then beautifies line spaces.\r\n */\r\nRS.ScreenManager.changeManifestFile = function (width, height, fullscreen) {\r\n\r\n    if (Utils.RPGMAKER_VERSION < '1.6.1') return;\r\n    var fs = require('fs');\r\n    var path = require('path');\r\n    var dirname = path.dirname(process.mainModule.filename);\r\n    var packageJsonPath = path.join(dirname, \"package.json\");\r\n\r\n    var templatePackageConfig = {\r\n        \"name\": \"mytest\",\r\n        \"main\": \"index.html\",\r\n        \"js-flags\": \"--expose-gc\",\r\n        \"crhomium-args\": \"--disable-sync\",\r\n        \"window\": {\r\n            \"title\": \"\",\r\n            \"toolbar\": false,\r\n            \"width\": RS.ScreenManager.Params.settings.defaultScreenSize.x,\r\n            \"height\": RS.ScreenManager.Params.settings.defaultScreenSize.y,\r\n            \"icon\": \"icon/icon.png\"\r\n        }\r\n    };\r\n\r\n    // if the config file exists?\r\n    if (fs.existsSync(packageJsonPath)) {\r\n        var packageConfig = JSON.parse(fs.readFileSync(packageJsonPath, \"utf8\"));\r\n        packageConfig.window.width = width;\r\n        packageConfig.window.height = height;\r\n        packageConfig.window.fullscreen = fullscreen;\r\n\r\n        fs.writeFileSync(packageJsonPath, JSON.stringify(packageConfig, null, '\\t'));\r\n\r\n    } else {\r\n\r\n        fs.writeFileSync(packageJsonPath, JSON.stringify(templatePackageConfig, null, '\\t'));\r\n        return RS.ScreenManager.changeManifestFile(width, height, fullscreen);\r\n\r\n    }\r\n\r\n};\r\n\r\n/**\r\n * In the RPG Maker MV v1.5.2 or less, \r\n * if the executable file name is the same as Game.exe, it couldn't be read the node library. \r\n * So its name must change with 'nw.exe' and then we must restart the game.\r\n */\r\nRS.ScreenManager.restartGame = function () {\r\n    var childProcess = require(\"child_process\");\r\n    var path = require('path');\r\n    var projectPath = path.dirname(process.mainModule.filename);\r\n    childProcess.execFile(process.execPath, [projectPath], function (err) {\r\n        if (err) console.warn(err);\r\n    });\r\n};\r\n\r\n/**\r\n * https://stackoverflow.com/a/20339709\r\n * @param {Array} data \r\n */\r\nRS.ScreenManager.uniqArray = function (data) {\r\n    var uniqData = [];\r\n    var foundData = {};\r\n\r\n    data.forEach(function (i) {\r\n        var packData = JSON.stringify(i);\r\n        if (!foundData[packData]) {\r\n            uniqData.push(i);\r\n            foundData[packData] = true;\r\n        }\r\n    }, this);\r\n\r\n    return uniqData;\r\n\r\n}","module.exports = require(\"child_process\");","import parameters from \"./parameters\";\r\n\r\nvar PrivateLocalization = function () {};\r\n\r\nvar newLocalization = RS.ScreenManager.jsonParse(parameters[\"Localization\"]);\r\nvar langCode = navigator.language.slice(0, 2);\r\n\r\nPrivateLocalization.prototype = {\r\n    \"code\": eval(newLocalization.Language),\r\n    \"get\": function (type) {\r\n    var code = this.code;\r\n    var lang = PrivateLocalization[code];\r\n    return (lang) ? lang[type] : PrivateLocalization.en[type];\r\n    }    \r\n};\r\n\r\nnewLocalization[\"Localization\"].forEach(function(i) {\r\n    var lang = i.lang;\r\n    PrivateLocalization[lang] = i;\r\n});\r\n\r\nRS.ScreenManager.localization = new PrivateLocalization();","Utils.getAbsolutePath = function(defaultPath) {\r\n    var fileName = defaultPath.split(\"\\\\\");\r\n    var driveName = fileName.shift();\r\n    fileName = driveName + \"//\" + fileName.join(\"/\");\r\n\r\n    return fileName;\r\n\r\n};","//============================================================================\r\n// Load the node library and then retrieves information about the display RS.ScreenManager.Params.settings.\r\n// using the Windows API called EnumDisplaySetting(User32.dll)\r\n//============================================================================  \r\n\r\n(function initWithSettings() {\r\n\r\n    \"use strict\";\r\n\r\n    try {\r\n\r\n        if (Utils.isNwjs()) {\r\n\r\n            // if you didn't have node library, it will set as a default resolution list.\r\n            if (!RS.ScreenManager.Params.isUsedNodeLibrary) {\r\n                RS.ScreenManager.Params.settings.pcGraphicsArray = RS.ScreenManager.Params.settings.pcGraphicsTempArray;\r\n                RS.ScreenManager.Params.options.allResolutions = true;\r\n                return;\r\n            }\r\n\r\n            var path = require('path'),\r\n                fs = require('fs'),\r\n                platform = process.platform;\r\n            const base = process.mainModule.filename;\r\n\r\n            switch (platform) {\r\n                case 'win32':\r\n\r\n                    var fileVersion = \"v1.2.0\";\r\n                    var processArch = process.arch;\r\n\r\n                    if (Utils.RPGMAKER_VERSION >= \"1.6.1\") {\r\n                        /**\r\n                         * Original Versions in RMMV 1.6.1 : \r\n                             ares: \"1.13.0\"\r\n                            chromium: \"65.0.3325.181\"\r\n                            cldr: \"32.0\"\r\n                            http_parser: \"2.8.0\"\r\n                            icu: \"60.1\"\r\n                            modules: \"59\"\r\n                            napi: \"3\"\r\n                            nghttp2: \"1.29.0\"\r\n                            node: \"9.11.1\"\r\n                            node-webkit: \"0.29.4\"\r\n                            nw: \"0.29.4\"\r\n                            nw-commit-id: \"6a254fe-1c00f31-b892847-deb9bc6\"\r\n                            nw-flavor: \"sdk\"\r\n                            openssl: \"1.0.2o\"\r\n                            tz: \"2017c\"\r\n                            unicode: \"10.0\"\r\n                            uv: \"1.19.2\"\r\n                            v8: \"6.5.254.41\"\r\n                            zlib: \"1.2.11\"\r\n\r\n                        * Node Webkit Version in My Computer:\r\n                            ares: \"1.14.0\"\r\n                            chromium: \"69.0.3497.100\"\r\n                            cldr: \"33.1\"\r\n                            http_parser: \"2.8.0\"\r\n                            icu: \"62.1\"\r\n                            modules: \"64\"\r\n                            napi: \"3\"\r\n                            nghttp2: \"1.33.0\"\r\n                            node: \"10.11.0\"\r\n                            node-webkit: \"0.33.4\"\r\n                            nw: \"0.33.4\"\r\n                            nw-commit-id: \"3d7302c-de9606e-577bc92-58acf98\"\r\n                            nw-flavor: \"sdk\"\r\n                            openssl: \"1.1.0i\"\r\n                            tz: \"2018e\"\r\n                            unicode: \"11.0\"\r\n                            uv: \"1.23.0\"\r\n                            v8: \"6.9.427.23\"\r\n                            zlib: \"1.2.11\"              \r\n                            */\r\n                        fileVersion = `v${process.versions.node}`;\r\n                    }\r\n\r\n                    // It must change the filename as 'nw.exe' in RPG Maker MV 1.5.2 or less.\r\n                    if (process.versions.node == \"1.2.0\" && process.execPath.contains(\"Game.exe\")) {\r\n\r\n                        // if the game plays in the test play mode, it does not show up the alert window.\r\n                        if (Utils.isOptionValid('test') || Utils.isOptionValid('etest') || Utils.isOptionValid('btest')) {\r\n\r\n                            RS.ScreenManager.Params.settings.state = \"initialized\";\r\n                            RS.ScreenManager.Params.settings.pcGraphicsArray = RS.ScreenManager.Params.settings.pcGraphicsTempArray;\r\n                            return;\r\n\r\n                        } else {\r\n\r\n                            window.alert(RS.ScreenManager.localization.get(\"NotFoundNwExe\"));\r\n                            var targetName = path.join(process.execPath, \"..\", \"nw.exe\");\r\n                            fs.copyFile(process.execPath, targetName, \"utf8\", function (err, data) {});\r\n\r\n                        }\r\n\r\n                    }\r\n\r\n                    var fileName = path.join(base, \"..\", `js/libs/${fileVersion}-winDisplaySettings-${processArch}.node`);\r\n                    fileName = Utils.getAbsolutePath(fileName);\r\n\r\n                    // if the library file exists?\r\n                    if (fs.existsSync(fileName)) {\r\n\r\n                        var display = require(fileName);\r\n\r\n                        // Remove duplicate items from the list.\r\n                        var items = display.GetDisplaySettings();\r\n\r\n                        RS.ScreenManager.Params.settings.pcGraphicsArray = items;\r\n\r\n                        RS.ScreenManager.Params.settings.state = \"initialized\";\r\n\r\n                    } else {\r\n                        window.alert(RS.ScreenManager.localization.get(\"NotFoundError\"));\r\n                        RS.ScreenManager.Params.settings.state = \"failed\";\r\n                        // Set Default Resolution\r\n                        RS.ScreenManager.Params.settings.pcGraphicsArray = RS.ScreenManager.Params.settings.pcGraphicsTempArray;\r\n                        RS.ScreenManager.Params.options.allResolutions = true;\r\n                    }\r\n\r\n                    break;\r\n\r\n                default:\r\n                    // in case of Mac OS (base on darwin, linux)\r\n                    RS.ScreenManager.Params.settings.pcGraphicsArray = RS.ScreenManager.Params.settings.pcGraphicsTempArray;\r\n                    RS.ScreenManager.Params.options.allResolutions = true;\r\n                    break;\r\n            }\r\n        }\r\n\r\n    } catch (error) {\r\n        console.warn(error);\r\n        RS.ScreenManager.Params.settings.pcGraphicsArray = RS.ScreenManager.Params.settings.pcGraphicsTempArray;\r\n        RS.ScreenManager.Params.options.allResolutions = true;\r\n    }\r\n\r\n})();\r\n","function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 9;","//============================================================================\r\n// ScreenConfig\r\n//============================================================================\r\n\r\nfunction ScreenConfig() {\r\n    this.initialize.apply(this, arguments);\r\n};\r\n\r\nScreenConfig.prototype.constructor = ScreenConfig;\r\nScreenConfig.prototype.initialize = function (originWidth, originHeight, orientation) {\r\n    this._originWidth = originWidth;\r\n    this._originHeight = originHeight;\r\n    this._orientation = orientation;\r\n    this._aspectRatio = this.getRatio(originWidth, originHeight);\r\n};\r\n\r\nScreenConfig.prototype.gcd = function (p, q) {\r\n    var self = this;\r\n    if (q === 0) return p;\r\n\r\n    return this.gcd(q, p % q);\r\n\r\n};\r\n\r\nScreenConfig.prototype.getSize = function (virtualWidth) {\r\n    var ret, w, h;\r\n\r\n    w = parseInt(virtualWidth);\r\n    h = parseInt(Math.round(this.getHeight(virtualWidth)));\r\n    ret = [w, h];\r\n\r\n    return ret;\r\n};\r\n\r\nScreenConfig.prototype.getRatio = function (width, height) {\r\n    var gcd, ret;\r\n    if (width === height) return [1, 1];\r\n    gcd = this.gcd(width, height);\r\n    ret = [(width / gcd), (height / gcd)];\r\n    return ret;\r\n};\r\n\r\nScreenConfig.prototype.getRatioAsString = function (width, height) {\r\n    var gcd, temp, ret;\r\n    if (width === height) return [1, 1];\r\n    if (width < height) {\r\n        temp = width;\r\n        width = height;\r\n        height = temp;\r\n    }\r\n    gcd = this.gcd(width, height);\r\n    ret = Number(width / gcd) + ':' + Number(height / gcd);\r\n\r\n    return ret;\r\n\r\n};\r\n\r\nScreenConfig.prototype.getWidth = function (newHeight) {\r\n    var ar = this._aspectRatio;\r\n    var ratio = parseFloat(ar[0] / ar[1]);\r\n\r\n    return ratio * newHeight;\r\n\r\n};\r\n\r\nScreenConfig.prototype.getHeight = function (newWidth) {\r\n    var ar = this._aspectRatio;\r\n    var ratio = parseFloat(ar[1] / ar[0]);\r\n\r\n    return ratio * newWidth;\r\n\r\n};\r\n\r\nwindow.ScreenConfig = ScreenConfig;\r\n\r\n//============================================================================\r\n// CustomScreenConfig\r\n//============================================================================\r\nfunction CustomScreenConfig() {\r\n    this.initialize.apply(this, arguments);\r\n};\r\n\r\nCustomScreenConfig.prototype = Object.create(ScreenConfig.prototype);\r\nCustomScreenConfig.prototype.constructor = CustomScreenConfig;\r\n\r\nCustomScreenConfig.prototype.initialize = function (a, b) {\r\n    // We don't need parameters,\r\n    // But it is just for calling the constructor of corresponding superclass.\r\n    ScreenConfig.prototype.initialize.call(this, 1600, 900, 'landscape');\r\n    a = a || 16;\r\n    b = b || 9;\r\n    this._aspectRatio = [a, b];\r\n};\r\n\r\nwindow.CustomScreenConfig = CustomScreenConfig;\r\n\r\n//============================================================================\r\n// Point\r\n//============================================================================\r\nPoint.prototype.toString = function () {\r\n    return this.x + ' x ' + this.y;\r\n};\r\n","//============================================================================\r\n// Graphics\r\n//============================================================================\r\n\r\nGraphics.getAvailGraphicsArray = function (returnType) {\r\n    var data, tw, th, pt, gArray, result, maxSW, maxSH, type;\r\n    var orientation, config, aspectRatio;\r\n    var temp, ret;\r\n\r\n    gArray = [];\r\n    result = [];\r\n\r\n    // outerWidth : 브라우저 윈도우의 사이드바와 가장자리 경계선을 포함한 폭.\r\n    // screen.availWidth : OS의 상태바나 작업 표시줄을 제외한 폭.\r\n    maxSW = Utils.isMobileDevice() ? window.outerWidth : window.screen.availWidth;\r\n    maxSH = Utils.isMobileDevice() ? window.outerHeight : window.screen.availHeight;\r\n\r\n    // Obtain the screen orientation.\r\n    if (Utils.isNwjs()) {\r\n        type = (maxSW > maxSH) ? 'landscape' : 'portrait';\r\n        if (maxSW === maxSH) type = 'landscape';\r\n    } else {\r\n        type = screen.orientation.type.match(/landscape/) ? 'landscape' : 'portrait';\r\n    }\r\n\r\n    data = (Utils.isNwjs()) ? RS.ScreenManager.Params.settings.pcGraphicsArray : RS.ScreenManager.Params.settings.resolutionQualityOnMobile;\r\n    // if( Utils.isMobileDevice()) data = RS.ScreenManager.Params.settings.mobileGraphicsArray;\r\n\r\n    // Set a custom aspect ratio\r\n    config = new CustomScreenConfig(RS.ScreenManager.Params.settings.customAspectRatio[0], RS.ScreenManager.Params.settings.customAspectRatio[1]);\r\n\r\n    data = RS.ScreenManager.uniqArray(data);\r\n\r\n    data.forEach(function (i) {\r\n\r\n        var sw = 0;\r\n        var sh = 0;\r\n\r\n        if ('width' in i) {\r\n            sw = i.width;\r\n        } else {\r\n            sw = i[0];\r\n        }\r\n\r\n        if ('height' in i) {\r\n            sh = i.height;\r\n        } else {\r\n            sh = i[1];\r\n        }\r\n\r\n        tw = Number(sw);\r\n        th = Number(sh);\r\n\r\n        // Swap\r\n        if (type === 'portrait' && (maxSW > maxSH)) {\r\n            var temp = tw;\r\n            tw = th;\r\n            th = temp;\r\n        }\r\n\r\n        if (tw >= 0 && tw <= maxSW && th >= 0 && th <= maxSH) {\r\n\r\n            // Convert the screen using an Aspect Ratio\r\n            if (RS.ScreenManager.Params.options.aspectRatio) {\r\n                temp = config.getSize(tw);\r\n                tw = temp[0];\r\n                th = temp[1];\r\n            }\r\n\r\n            pt = new Point(tw, th);\r\n            gArray.push(pt);\r\n            result.push(pt.toString());\r\n\r\n        } else {\r\n\r\n            if (RS.ScreenManager.Params.options.allResolutions) {\r\n\r\n                // Convert the screen using an Aspect Ratio\r\n                if (RS.ScreenManager.Params.options.aspectRatio) {\r\n                    temp = config.getSize(tw);\r\n                    tw = temp[0];\r\n                    th = temp[1];\r\n                }\r\n\r\n                pt = new Point(tw, th);\r\n                gArray.push(pt);\r\n                result.push(pt.toString());\r\n\r\n            }\r\n        }\r\n\r\n    }, this);\r\n\r\n    return (returnType === 'String') ? result : gArray;\r\n\r\n};\r\n\r\nGraphics.getOrientation = function (inner) {\r\n    var maxSW = (inner === true) ? window.innerWidth : window.screen.availWidth;\r\n    var maxSH = (inner === true) ? window.innerHeight : window.screen.availHeight;\r\n    var orientation = 'landscape';\r\n    if (Utils.isNwjs() || !screen.orientation) {\r\n        orientation = (maxSW > maxSH) ? 'landscape' : 'portrait';\r\n        if (maxSW === maxSH) orientation = 'landscape';\r\n    } else {\r\n        orientation = screen.orientation.type.match(/landscape/) ? 'landscape' : 'portrait';\r\n    }\r\n    return orientation;\r\n};\r\n\r\nGraphics.isAvailScreenHeight = function (height) {\r\n    var task_height = screen.height - screen.availHeight;\r\n    var maxHeight = screen.availHeight - task_height;\r\n    return height <= maxHeight;\r\n};\r\n\r\nGraphics.uniqWithPoint = function (data, callback) {\r\n    var ret = [];\r\n    ret = data.filter(function (e, i, a) {\r\n\r\n        if (a[i - 1] instanceof Point) {\r\n\r\n            if (a[i - 1].x === e.x && a[i - 1].y === e.y) {\r\n\r\n                return false;\r\n\r\n            }\r\n\r\n            return true;\r\n\r\n        } else {\r\n\r\n            return true;\r\n\r\n        }\r\n    });\r\n\r\n    callback(ret);\r\n\r\n};\r\n\r\nGraphics.getVirtualWidth = function (originValue) {\r\n    var ratio = 816.0 / Graphics.boxWidth;\r\n    return Math.floor(originValue / ratio);\r\n};\r\n\r\nGraphics.getVirtualHeight = function (originValue) {\r\n    var ratio = 624.0 / Graphics.boxHeight;\r\n    return Math.floor(originValue / ratio);\r\n};\r\n\r\nGraphics.setScreenResize = function (newScr) {\r\n    var cx, cy, xPadding, yPadding;\r\n    var tw, th, minW, minH;\r\n    var orientation, config, aspectRatio;\r\n    var maxSW, maxSH;\r\n    var temp;\r\n\r\n    var taskHeight = 0;\r\n\r\n    // Get the screen width and height (Excepted in Windows Taskbar)\r\n    maxSW = window.screen.availWidth;\r\n    maxSH = window.screen.availHeight;\r\n\r\n    // Get an orientation in your screen\r\n    orientation = this.getOrientation(false);\r\n\r\n    // Get an aspect ratio of a new screen size.\r\n    config = new ScreenConfig(newScr.x, newScr.y, orientation);\r\n    aspectRatio = config._aspectRatio || [17, 13];\r\n\r\n    if (RS.ScreenManager.Params.options.aspectRatio) {\r\n        config = new CustomScreenConfig(RS.ScreenManager.Params.settings.customAspectRatio[0], RS.ScreenManager.Params.settings.customAspectRatio[1]);\r\n        aspectRatio = config._aspectRatio;\r\n        temp = config.getSize(newScr.x);\r\n        newScr.x = temp[0];\r\n        newScr.y = temp[1];\r\n    }\r\n\r\n    SceneManager._screenWidth = newScr.x;\r\n    SceneManager._screenHeight = newScr.y;\r\n    SceneManager._boxWidth = newScr.x;\r\n    SceneManager._boxHeight = newScr.y;\r\n\r\n    // 화면 중앙 좌표\r\n    cx = (window.screen.availWidth / 2) - (newScr.x / 2);\r\n    cy = (window.screen.availHeight / 2) - (newScr.y / 2);\r\n\r\n    // 화면 패딩\r\n    xPadding = window.outerWidth - window.innerWidth;\r\n    yPadding = window.outerHeight - window.innerHeight;\r\n\r\n    // 타일 크기\r\n    tw = ($gameMap && $gameMap.tileWidth) ? $gameMap.tileWidth() : 48;\r\n    th = ($gameMap && $gameMap.tileHeight) ? $gameMap.tileHeight() : 48;\r\n\r\n    // 최소 크기\r\n    minW = (tw * aspectRatio[0]) || Graphics._renderer.width;\r\n    minH = (th * aspectRatio[1]) || Graphics._renderer.height;\r\n\r\n    // 작업 표시줄의 크기 때문에 수용할 수 없는 해상도라면 한 단계 낮춘다.\r\n    if (RS.ScreenManager.isWindowsTaskbarShown() &&\r\n        !this.isAvailScreenHeight(newScr.y) &&\r\n        !Utils.isMobileDevice() &&\r\n        RS.ScreenManager.Params.options.autoScaling) {\r\n\r\n        var data = Graphics.getAvailGraphicsArray('Number');\r\n        var ret = [];\r\n\r\n        this.uniqWithPoint(data.slice(0), function (newData) {\r\n            ret = newData;\r\n        });\r\n\r\n        ret = ret.filter(function (i) {\r\n            return i.y < (newScr.y);\r\n        }, this);\r\n\r\n        var item = ret.pop();\r\n\r\n        if (item) {\r\n            newScr = item;\r\n        }\r\n    }\r\n\r\n    // 화면 크기를 절대 값으로 지정\r\n    window.resizeTo(newScr.x + xPadding, newScr.y + yPadding);\r\n    window.moveTo(cx, cy);\r\n\r\n    // 해상도 최소값 & 최대값 설정 부분, 자동으로 조절하는 것에 맞겼다면.\r\n    if (RS.ScreenManager.Params.options.autoScaling && (tw / th >= 1.0) && tw >= 48) {\r\n\r\n        // 새로운 해상도 값이 최소값(tileWidth * aspectRatio) 값보다 작으면 해상도를 최소값으로 제한한다.\r\n        if (RS.ScreenManager.Params.options.minWidth) Graphics.width = Graphics.boxWidth = Math.max(minW, newScr.x);\r\n        if (RS.ScreenManager.Params.options.minHeight) Graphics.height = Graphics.boxHeight = Math.max(minH, newScr.y);\r\n\r\n        // 최소 최대 제한이 없을 경우,\r\n        if (!RS.ScreenManager.Params.options.minWidth && !RS.ScreenManager.Params.options.minHeight) {\r\n            Graphics.width = Graphics.boxWidth = newScr.x.clamp(minW, window.outerWidth);\r\n            Graphics.height = Graphics.boxHeight = newScr.x.clamp(minH, window.outerHeight);\r\n        }\r\n\r\n    } else {\r\n        // 그냥 설정한다.\r\n        Graphics.width = Graphics.boxWidth = newScr.x;\r\n        Graphics.height = Graphics.boxHeight = newScr.y;\r\n    }\r\n\r\n    // Reset graphics' size\r\n    if (RS.ScreenManager.Params.options.resize) {\r\n        Graphics._renderer.resize(newScr.x, newScr.y);\r\n    }\r\n\r\n    // Reset the scene (Unsaved changes will be lost)\r\n    if (RS.ScreenManager.Params.options.recreate && !(SceneManager._scene instanceof Scene_Boot)) {\r\n        if (SceneManager._scene) SceneManager.push(SceneManager._scene.constructor);\r\n    }\r\n\r\n};\r\n\r\n/**\r\n * Disarms the behavior of Community_Basic plugin.\r\n */\r\nif (PluginManager._scripts.contains(\"Community_Basic\")) {\r\n    SceneManager.initNwjs = function () {\r\n        if (Utils.isNwjs()) {\r\n            var gui = require('nw.gui');\r\n            var win = gui.Window.get();\r\n            if (process.platform === 'darwin' && !win.menu) {\r\n                var menubar = new gui.Menu({\r\n                    type: 'menubar'\r\n                });\r\n                var option = {\r\n                    hideEdit: true,\r\n                    hideWindow: true\r\n                };\r\n                menubar.createMacBuiltin('Game', option);\r\n                win.menu = menubar;\r\n            }\r\n        }\r\n    };\r\n};\r\n\r\n/**\r\n * Disarms the behavior of YEP_CoreEngine and ScreenResolution plugins.\r\n */\r\nif (SceneManager.run.toString().match(/Yanfly/i)) {\r\n    SceneManager.run = function (sceneClass) {\r\n        try {\r\n            this.initialize();\r\n            this.goto(sceneClass);\r\n            this.requestUpdate();\r\n        } catch (e) {\r\n            this.catchException(e);\r\n        }\r\n    };\r\n}\r\n\r\nvar alias_Graphics_onWindowResize = Graphics._onWindowResize;\r\nGraphics._onWindowResize = function () {\r\n    alias_Graphics_onWindowResize.call(this);\r\n    if (Utils.isNwjs()) {\r\n        //   var canvas = document.querySelector('canvas');\r\n        //   var dx = parseInt(canvas.style.width);\r\n        //   var dy = parseInt(canvas.style.height);\r\n        //   var xPadding = window.outerWidth - window.innerWidth;\r\n        //   var yPadding = window.outerHeight - window.innerHeight;\r\n        //   var cx = (window.screen.availWidth / 2) - (Graphics.boxWidth / 2);\r\n        //   var cy = (window.screen.availHeight / 2) - (Graphics.boxHeight / 2);\r\n        //   if(dx !== Graphics.boxWidth) {\r\n        //     var mx = (Graphics.boxWidth - dx);\r\n        //     var my = (Graphics.boxHeight - dy);\r\n        //     window.resizeTo(\r\n        //       parseInt(Graphics.boxWidth - mx + xPadding),\r\n        //       parseInt(Graphics.boxHeight - my + yPadding)\r\n        //     );\r\n        //   }\r\n        if (!nw) var nw = require(\"nw.gui\");\r\n        var win = nw.Window.get();\r\n        win.setPosition(\"center\");\r\n    }\r\n};\r\n","//============================================================================\r\n// Scene_Boot\r\n//============================================================================\r\n\r\nvar alias_Scene_Boot_create = Scene_Boot.prototype.create;\r\nScene_Boot.prototype.create = function () {\r\n    alias_Scene_Boot_create.call(this);\r\n    SceneManager.initResolution();\r\n};","//============================================================================\r\n// SceneManager\r\n//============================================================================\r\n\r\nSceneManager.initResolution = function () {\r\n    var self = this;\r\n    var type, size, orientation, config, mobile;\r\n    var sw, sh, bw, bh;\r\n    var maxSW, maxSH;\r\n    var defScrWidth, defScrHeight;\r\n\r\n    RS.ScreenManager.readManifestFile();\r\n\r\n    maxSW = window.innerWidth;\r\n    maxSH = window.innerHeight;\r\n\r\n    // Sets the default screen width and height values.\r\n    defScrWidth = RS.ScreenManager.Params.settings.defaultScreenSize.x;\r\n    defScrHeight = RS.ScreenManager.Params.settings.defaultScreenSize.y;\r\n\r\n    // Obtains the ratio depended on screen orientation.\r\n    orientation = Graphics.getOrientation(true);\r\n    config = new ScreenConfig(maxSW, maxSH, orientation);\r\n\r\n    // Changes the resolution depended on the aspect ratio in the mobile device.\r\n    size = config.getSize(defScrWidth);\r\n\r\n    mobile = !Utils.isNwjs() || RS.ScreenManager.Params.options.aspectRatio;\r\n    sw = (mobile === true) ? size[0] : defScrWidth;\r\n    sh = (mobile === true) ? size[1] : defScrHeight;\r\n    bw = (mobile === true) ? size[0] : defScrWidth;\r\n    bh = (mobile === true) ? size[1] : defScrHeight;\r\n\r\n    // Calls the function changes the resolution in case of the PC.\r\n    if (Utils.isNwjs()) {\r\n        var newSize = new Point(sw, sh);\r\n        Graphics.setScreenResize(newSize);\r\n    } else {\r\n        Graphics.width = sw;\r\n        Graphics.height = sh;\r\n        Graphics.boxWidth = sw;\r\n        Graphics.boxHeight = sh;\r\n    }\r\n};","//============================================================================\r\n//#region ScreenManager\r\n//============================================================================\r\n\r\nfunction ScreenManager() {\r\n    this.initialize.apply(this, arguments);\r\n}\r\n\r\nScreenManager.prototype = Object.create(Scene_Base.prototype);\r\nScreenManager.prototype.constructor = ScreenManager;\r\n\r\nScreenManager.prototype.initialize = function () {\r\n    Scene_Base.prototype.initialize.call(this);\r\n};\r\n\r\nScreenManager.prototype.create = function () {\r\n    Scene_Base.prototype.create.call(this);\r\n\r\n    this.createWindowLayer();\r\n    this.createAvailGraphicsList();\r\n    this.createPanel();\r\n\r\n};\r\n\r\nScreenManager.prototype.makeSpriteForPanel = function (height) {\r\n    var color1 = Window_Base.prototype.dimColor1();\r\n    var color2 = Window_Base.prototype.dimColor2();\r\n    var x = 0;\r\n    var y = 0;\r\n    var width = Math.floor(Graphics.boxWidth / 3);\r\n    var sprite = new Sprite(new Bitmap(width, height * 2));\r\n\r\n    if(navigator.userAgent.match(/Chrome/)) {\r\n    sprite.bitmap.fillAll(color1);\r\n    } else {\r\n    sprite.bitmap.gradientFillRect(x, y, Math.floor(width / 2), height, color2, color1);\r\n    sprite.bitmap.gradientFillRect(Math.floor(x + width / 2), y, Math.floor(width / 2), height, color1, color2);\r\n    }\r\n    sprite.bitmap.drawText(RS.ScreenManager.localization.get(\"Display Resolutions\"), x, y, width, height, 'center');\r\n\r\n    return sprite;\r\n\r\n};\r\n\r\nScreenManager.prototype.createPanel = function () {\r\n    var height = Math.floor(Graphics.boxHeight / 17);\r\n    var nx = this._availGraphicsList.x;\r\n    var ny = this._availGraphicsList.y - height - 10;\r\n\r\n    this._panel = this.makeSpriteForPanel(height);\r\n    this.setPosition(this._panel, nx, ny).addChild(this._panel);\r\n\r\n};\r\n\r\nScreenManager.prototype.setPosition = function (type, x, y) {\r\n    if(!type) return;\r\n\r\n    type.x = x;\r\n    type.y = y;\r\n\r\n    return this;\r\n\r\n};\r\n\r\nScreenManager.prototype.setHandler = function () {\r\n    if(!this._availGraphicsList) return;\r\n\r\n    this._availGraphicsList.setHandler('ok', this.convertScreenSize.bind(this));\r\n    this._availGraphicsList.setHandler('cancel', this.popScene.bind(this));\r\n\r\n    return this;\r\n\r\n};\r\n\r\nScreenManager.prototype.createDisplayList = function (x, y, width, height) {\r\n    var ClassType = Utils.isNwjs() ? Window_ResolutionList : Window_ResolutionListForMobile;\r\n\r\n    return new ClassType(x, y, width, height);\r\n\r\n};\r\n\r\nScreenManager.prototype.createAvailGraphicsList = function () {\r\n    var width = Math.floor(Graphics.boxWidth / 3);\r\n    var height = Math.floor(Graphics.boxWidth / 2.5);\r\n    var nx = Graphics.boxWidth / 2 - (width / 2);\r\n    var ny = Graphics.boxHeight / 2 - (height / 2);\r\n\r\n    this._availGraphicsList = this.createDisplayList(0, 0, width, height);\r\n    this.setPosition(this._availGraphicsList, nx, ny )\r\n    .setHandler()\r\n    .addWindow(this._availGraphicsList);\r\n\r\n};\r\n\r\nScreenManager.prototype.convertWithAspectRatio = function () {\r\n    var config = new CustomScreenConfig(RS.ScreenManager.Params.settings.customAspectRatio[0], RS.ScreenManager.Params.settings.customAspectRatio[1]);\r\n    var insData = parseInt(window.screen.availWidth / RS.ScreenManager.Params.settings.customAspectRatio[0]) * RS.ScreenManager.Params.settings.customAspectRatio[0];\r\n    var data = config.getSize(insData);\r\n\r\n    Graphics.setScreenResize(new Point(data[0], data[1]));\r\n\r\n};\r\n\r\nScreenManager.prototype.convertWithNwjs = function () {\r\n    var scr = this._availGraphicsList.getCurrentItemToPoint();\r\n\r\n    if(scr) {\r\n    Graphics.setScreenResize(scr);\r\n    } else {\r\n    this.convertWithAspectRatio();\r\n    }\r\n\r\n    if(this._availGraphicsList.item() === RS.ScreenManager.localization.get(\"Full Screen\") ||\r\n    this._availGraphicsList.item() === RS.ScreenManager.localization.get(\"Windowed Mode\")) {\r\n    RS.ScreenManager.switchFullScreen();\r\n    }\r\n\r\n};\r\n\r\nScreenManager.prototype.convertWithOther = function () {\r\n    var scr = this._availGraphicsList.getCurrentItemToPoint();\r\n\r\n    if(scr) {\r\n    var temp = [];\r\n    temp.push(RS.ScreenManager.Params.options.aspectRatio);\r\n    temp.push(RS.ScreenManager.Params.options.resize);\r\n    RS.ScreenManager.Params.options.resize = true;\r\n    RS.ScreenManager.Params.options.aspectRatio = true;\r\n    Graphics.setScreenResize(scr);\r\n    RS.ScreenManager.Params.options.resize = temp.pop();\r\n    RS.ScreenManager.Params.options.aspectRatio = temp.pop();\r\n\r\n    } else {\r\n\r\n    this.convertWithAspectRatio();\r\n\r\n    }\r\n};\r\n\r\nScreenManager.prototype.flushScreen = function () {\r\n    $gameSystem._lastScreenManagerItem = this._availGraphicsList.index();\r\n\r\n    this.popScene();\r\n\r\n};\r\n\r\nScreenManager.prototype.convertScreenSize = function () {\r\n    // PC인가?\r\n    if(Utils.isNwjs()) {\r\n\r\n    this.convertWithNwjs();\r\n\r\n    // 다른 플랫폼인가?\r\n    } else {\r\n\r\n    this.convertWithOther();\r\n\r\n    }\r\n\r\n    // 빠져나간다.\r\n    this.flushScreen();\r\n\r\n};\r\n\r\nwindow.ScreenManager = ScreenManager;\r\n\r\n//#endregion","//============================================================================\r\n// Game_System\r\n//============================================================================\r\n\r\nvar alias_Game_System_initialize = Game_System.prototype.initialize;\r\nGame_System.prototype.initialize = function() {\r\n    alias_Game_System_initialize.call(this);\r\n    this._lastScreenManagerItem = 0;\r\n};","//#region Option Window\r\n//============================================================================\r\n// Window_Options\r\n//============================================================================\r\n\r\nif (RS.ScreenManager.Params.isValidOptionWindow) {\r\n\r\n    var alias_Window_Options_initialize = Window_Options.prototype.initialize;\r\n    Window_Options.prototype.initialize = function () {\r\n        alias_Window_Options_initialize.call(this);\r\n        this._lastIndex = $gameSystem._lastScreenManagerItem || 0;\r\n    };\r\n\r\n    Window_Options.prototype.isResolution = function (symbol) {\r\n        return symbol.contains('Resolutions');\r\n    };\r\n\r\n    Window_Options.prototype.isAspectRatio = function (symbol) {\r\n        return symbol.contains('Aspect Ratio');\r\n    };\r\n\r\n    Window_Options.prototype.processOk = function () {\r\n        var index = this.index();\r\n        var symbol = this.commandSymbol(index);\r\n        var value = this.getConfigValue(symbol);\r\n        if (this.isVolumeSymbol(symbol)) {\r\n            value += this.volumeOffset();\r\n            if (value > 100) {\r\n                value = 0;\r\n            }\r\n            value = value.clamp(0, 100);\r\n            this.changeValue(symbol, value);\r\n        } else {\r\n            if (this.isResolution(symbol)) {\r\n                SceneManager.push(ScreenManager);\r\n            } else {\r\n                this.changeValue(symbol, !value);\r\n            }\r\n        }\r\n    };\r\n\r\n    var alias_Window_Options_cursorRight = Window_Options.prototype.cursorRight;\r\n    Window_Options.prototype.cursorRight = function (wrap) {\r\n        var index = this.index();\r\n        var symbol = this.commandSymbol(index);\r\n        if (!this.isResolution(symbol) || !this.isAspectRatio(symbol)) {\r\n            return alias_Window_Options_cursorRight.call(this, wrap);\r\n        }\r\n    };\r\n\r\n    var alias_Window_Options_cursorLeft = Window_Options.prototype.cursorLeft;\r\n    Window_Options.prototype.cursorLeft = function (wrap) {\r\n        var index = this.index();\r\n        var symbol = this.commandSymbol(index);\r\n        if (!this.isResolution(symbol) || !this.isAspectRatio(symbol)) {\r\n            return alias_Window_Options_cursorLeft.call(this, wrap);\r\n        }\r\n    };\r\n\r\n    Window_Options.prototype.statusText = function (idx) {\r\n        var symbol = this.commandSymbol(idx);\r\n        var value = this.getConfigValue(symbol);\r\n        if (this.isVolumeSymbol(symbol)) {\r\n            return this.volumeStatusText(value);\r\n        } else {\r\n            // 해상도 조절\r\n            if (this.isResolution(symbol)) {\r\n                idx = this._lastIndex;\r\n                var item;\r\n\r\n                // PC라면 해상도 표시\r\n                if (Utils.isNwjs()) {\r\n                    item = Graphics.getAvailGraphicsArray('String');\r\n                    if (!RS.ScreenManager.isFullscreen()) {\r\n                        item.push(RS.ScreenManager.localization.get(\"Full Screen\"));\r\n                    } else {\r\n                        item.push(RS.ScreenManager.localization.get(\"Windowed Mode\"));\r\n                    }\r\n                } else {\r\n                    // 그외 플랫폼은 낮음, 보통, 높음, 매우 높음으로 표시\r\n                    item = RS.ScreenManager.localization.get(\"MobileResolutions\");\r\n                }\r\n\r\n                return String(Graphics.boxWidth + \" x \" + Graphics.boxHeight);\r\n\r\n                // 종횡비 표시\r\n            } else {\r\n                if (this.isAspectRatio(symbol)) {\r\n                    return new ScreenConfig(0, 0, '').getRatioAsString(Graphics.boxWidth, Graphics.boxHeight);\r\n                } else {\r\n                    return this.booleanStatusText(value);\r\n                }\r\n            }\r\n        }\r\n    };\r\n\r\n    var alias_Window_Options_addVolumeOptions = Window_Options.prototype.addVolumeOptions;\r\n    Window_Options.prototype.addVolumeOptions = function () {\r\n        alias_Window_Options_addVolumeOptions.call(this);\r\n        this.addCommand(RS.ScreenManager.localization.get('Resolutions'), 'Resolutions');\r\n        this.addCommand(RS.ScreenManager.localization.get('Aspect Ratio'), 'Aspect Ratio');\r\n    };\r\n}","//============================================================================\r\n// Window_ResolutionList\r\n//============================================================================\r\n\r\nfunction Window_ResolutionList() {\r\n    this.initialize.apply(this, arguments);\r\n};\r\n\r\nWindow_ResolutionList.prototype = Object.create(Window_Selectable.prototype);\r\nWindow_ResolutionList.prototype.constructor = Window_ResolutionList;\r\n\r\nWindow_ResolutionList.prototype.initialize = function (x, y, width, height) {\r\n    Window_Selectable.prototype.initialize.call(this, x, y, width, height);\r\n\r\n    this.initMembers();\r\n    this.initWithItemPoint();\r\n    this.refresh();\r\n    this.activate();\r\n\r\n    this.select($gameSystem._lastScreenManagerItem || 0);\r\n\r\n};\r\n\r\nWindow_ResolutionList.prototype.initMembers = function () {\r\n    this._windowFrameSprite.visible = false;\r\n\r\n    this._index = 0;\r\n    this._item = [];\r\n\r\n};\r\n\r\nWindow_ResolutionList.prototype.lineHeight = function () {\r\n    return Math.round(Graphics.boxHeight / 16);\r\n};\r\n\r\nWindow_ResolutionList.prototype.initWithAspectRatio = function (data) {\r\n    if (RS.ScreenManager.Params.options.aspectRatio) {\r\n\r\n        var config = new CustomScreenConfig(RS.ScreenManager.Params.settings.customAspectRatio[0], RS.ScreenManager.Params.settings.customAspectRatio[1]);\r\n        var insData = parseInt(window.screen.availWidth / RS.ScreenManager.Params.settings.customAspectRatio[0]) * RS.ScreenManager.Params.settings.customAspectRatio[0];\r\n        var fullscreenData = config.getSize(insData);\r\n\r\n        data.push(new Point(fullscreenData[0], fullscreenData[1]));\r\n\r\n    }\r\n\r\n    return data;\r\n\r\n};\r\n\r\nWindow_ResolutionList.prototype.initWithItemPoint = function () {\r\n    var data = Graphics.getAvailGraphicsArray('Number');\r\n    var ret = [];\r\n\r\n    // 배열 내 중복된 데이터를 제거합니다.\r\n    this.uniqWithPoint(data.slice(0), function (newData) {\r\n        ret = newData;\r\n    });\r\n\r\n    ret = this.initWithAspectRatio(ret);\r\n\r\n    this._itemToPoint = ret;\r\n};\r\n\r\nWindow_ResolutionList.prototype.uniqWithPoint = function (data, callback) {\r\n    var ret = [];\r\n    ret = data.filter(function (e, i, a) {\r\n\r\n        if (a[i - 1] instanceof Point) {\r\n\r\n            if (a[i - 1].x === e.x && a[i - 1].y === e.y) {\r\n\r\n                return false;\r\n\r\n            }\r\n\r\n            return true;\r\n\r\n        } else {\r\n\r\n            return true;\r\n\r\n        }\r\n    });\r\n\r\n    callback(ret);\r\n\r\n};\r\n\r\nWindow_ResolutionList.prototype.getCurrentItemToPoint = function () {\r\n    return this._itemToPoint && this._index >= 0 ? this._itemToPoint[this._index] : null;\r\n};\r\n\r\nWindow_ResolutionList.prototype.maxItems = function () {\r\n    return this._data ? this._data.length : 1;\r\n};\r\n\r\nWindow_ResolutionList.prototype.item = function () {\r\n    return this._data && this._index >= 0 ? this._data[this._index] : null;\r\n};\r\n\r\nWindow_ResolutionList.prototype.makeItemList = function () {\r\n    this._data = Graphics.getAvailGraphicsArray('String');\r\n    if (RS.ScreenManager.Params.options.aspectRatio) this._data = this.uniq(this._data.slice(0));\r\n    if (!RS.ScreenManager.isFullscreen()) {\r\n        this._data.push(RS.ScreenManager.localization.get(\"Full Screen\"));\r\n    } else {\r\n        this._data.push(RS.ScreenManager.localization.get(\"Windowed Mode\"));\r\n    }\r\n};\r\n\r\nWindow_ResolutionList.prototype.isCurrentItemEnabled = function () {\r\n    return this.isEnabled(this._data[this.index()]);\r\n};\r\n\r\nWindow_ResolutionList.prototype.isEnabled = function (item) {\r\n    return !!item;\r\n};\r\n\r\nWindow_ResolutionList.prototype.resetFontSettings = function () {\r\n    this.contents.fontFace = this.standardFontFace();\r\n    this.contents.fontSize = this.standardFontSize();\r\n    this.contents.outlineColor = Utils.rgbToCssColor(128, 0, 0);\r\n    this.contents.outlineWidth = 2;\r\n    this.resetTextColor();\r\n};\r\n\r\nWindow_ResolutionList.prototype.drawItem = function (index) {\r\n    var rect = this.itemRectForText(index);\r\n    var text = this._data[index];\r\n\r\n    this.resetTextColor();\r\n\r\n    this.drawText(text, rect.x, rect.y, rect.width, 'center');\r\n\r\n};\r\n\r\nWindow_ResolutionList.prototype.refresh = function () {\r\n    this.makeItemList();\r\n    this.createContents();\r\n    this.drawAllItems();\r\n};\r\n\r\nWindow_ResolutionList.prototype.uniq = function (data) {\r\n    data = data.filter(function (e, i, a) {\r\n        return a.indexOf(e) === i;\r\n    }, this);\r\n    return data;\r\n};\r\n//#endregion\r\n\r\n//============================================================================\r\n//#region Window_ResolutionListForMobile\r\n//============================================================================\r\n/**\r\n * PC가 아닌 플랫폼에서는 창 사이즈가 변경되지 않으므로 그래픽 객체 크기를 변경한다.\r\n * @class Window_ResolutionListForMobile\r\n */\r\nfunction Window_ResolutionListForMobile() {\r\n    this.initialize.apply(this, arguments);\r\n};\r\n\r\nWindow_ResolutionListForMobile.prototype = Object.create(Window_ResolutionList.prototype);\r\nWindow_ResolutionListForMobile.prototype.constructor = Window_ResolutionListForMobile;\r\n\r\nWindow_ResolutionListForMobile.prototype.initialize = function (x, y, width, height) {\r\n    Window_ResolutionList.prototype.initialize.call(this, x, y, width, height);\r\n};\r\n\r\nWindow_ResolutionListForMobile.prototype.initWithItemPoint = function () {\r\n    var temp = RS.ScreenManager.Params.options.allResolutions;\r\n    var ret, data = Graphics.getAvailGraphicsArray(\"Number\");\r\n    RS.ScreenManager.Params.options.allResolutions = temp;\r\n\r\n    ret = this.initWithAspectRatio(data);\r\n\r\n    this._itemToPoint = ret;\r\n};\r\n\r\nWindow_ResolutionListForMobile.prototype.lineHeight = function () {\r\n    return Math.round(Graphics.boxHeight / 10);\r\n};\r\n\r\nWindow_ResolutionListForMobile.prototype.makeItemList = function () {\r\n    this._data = RS.ScreenManager.localization.get(\"MobileResolutions\");\r\n};\r\n\r\nWindow_ResolutionListForMobile.prototype.getCurrentItemToPoint = function () {\r\n    return this._itemToPoint && this._index >= 0 ? this._itemToPoint[this._index] : null;\r\n};\r\n\r\nWindow_ResolutionListForMobile.prototype.drawItem = function (index) {\r\n    var rect = this.itemRectForText(index);\r\n    var text = this._data[index];\r\n    this.resetTextColor();\r\n    this.drawText(text, rect.x, rect.y, rect.width, 'center');\r\n};\r\n\r\nwindow.Window_ResolutionList = Window_ResolutionList;\r\nwindow.Window_ResolutionListForMobile = Window_ResolutionListForMobile;\r\n\r\n//#endregion","//============================================================================\r\n//#region Sprite_Base\r\n//============================================================================\r\n\r\nSprite_Base.prototype.requestStretch = function (sprite) {\r\n    if (!sprite.bitmap) return;\r\n    var bitmap = sprite.bitmap;\r\n    if (bitmap.width <= 0) return;\r\n    if (bitmap.height <= 0) return;\r\n    var scaleX = Graphics.boxWidth / bitmap.width;\r\n    var scaleY = Graphics.boxHeight / bitmap.height;\r\n    sprite.scale.x = (scaleX > 1.0) ? scaleX : 1.0;\r\n    sprite.scale.y = (scaleY > 1.0) ? scaleY : 1.0;\r\n\r\n    if (RS.ScreenManager.Params.picturePosType === \"Virtual Coordinates\") {\r\n        var x = sprite.x;\r\n        var y = sprite.y;\r\n        var sw = bitmap.width * sprite.scale.x; // scale width and height\r\n        var sh = bitmap.height * sprite.scale.y;\r\n        var dw = bitmap.width; // original width and original height\r\n        var dh = bitmap.height;\r\n\r\n        if (dw == 0 || dh == 0) {\r\n            return;\r\n        }\r\n\r\n        var dx = x * (sw / dw); // destination position\r\n        var dy = y * (sh / dh);\r\n\r\n        // position\r\n        sprite.x = Math.floor(dx);\r\n        sprite.y = Math.floor(dy);\r\n\r\n    }\r\n\r\n};\r\n//#endregion\r\n\r\n//============================================================================\r\n//#region TilingSprite\r\n//============================================================================\r\nTilingSprite.prototype.reqeustResizeImage = function () {\r\n\r\n    if (!this.texture.frame) {\r\n        this.texture.frame = new PIXI.Rectangle(0, 0, Graphics.boxWidth, Graphics.boxHeight);\r\n    }\r\n\r\n    this.texture.frame.width = Graphics.boxWidth;\r\n    this.texture.frame.height = Graphics.boxHeight;\r\n\r\n}\r\n\r\nTilingSprite.prototype.isValidResizing = function () {\r\n    if (!RS.ScreenManager.Params.isValidScaledBattleback) return;\r\n    if (!this.bitmap) return false;\r\n    if (this.bitmap.width <= 0) return false;\r\n    if (this.bitmap.height <= 0) return false;\r\n    if (!this.visible) return false;\r\n    if (this.opacity <= 0) return false;\r\n    if (!this.bitmap._url) return false;\r\n    if (!this.texture) return false;\r\n\r\n    var url = this.bitmap._url;\r\n    var fileUri = url.split(\"/\");\r\n    var filename = fileUri.pop();\r\n    var folderName = fileUri.pop();\r\n\r\n    if (['battlebacks1', 'battlebacks2'].contains(folderName)) {\r\n        this._folderName = folderName;\r\n        return true;\r\n    }\r\n\r\n    return false;\r\n\r\n};\r\n\r\nTilingSprite.prototype.resizeImage = function () {\r\n    if (this.isValidResizing()) {\r\n        this.reqeustResizeImage();\r\n    }\r\n};\r\n\r\nvar alias_TilingSprite__onBitmapLoad = TilingSprite.prototype._onBitmapLoad;\r\nTilingSprite.prototype._onBitmapLoad = function () {\r\n    alias_TilingSprite__onBitmapLoad.call(this);\r\n    this.resizeImage();\r\n};\r\n\r\n//#endregion\r\n\r\n//============================================================================\r\n// Sprite_Actor\r\n//============================================================================  \r\n\r\n// These functions are worked fine in the vanilla mode only!!\r\n// I couldn't test the impact yet when using the plugin named YEP_BattleEngineCore.\r\nif (!Imported.YEP_BattleEngineCore) {\r\n\r\n    Sprite_Actor.prototype.moveToStartPosition = function () {\r\n        eval($.Params.actorFunc.moveToStartPosition);\r\n    };\r\n\r\n    Sprite_Actor.prototype.setActorHome = function (index) {\r\n        eval($.Params.actorFunc.setActorHome);\r\n    };\r\n\r\n    Sprite_Actor.prototype.stepForward = function () {\r\n        eval($.Params.actorFunc.stepForward);\r\n    };\r\n\r\n    Sprite_Actor.prototype.stepBack = function () {\r\n        eval($.Params.actorFunc.stepBack);\r\n    };\r\n\r\n    Sprite_Actor.prototype.retreat = function () {\r\n        eval($.Params.actorFunc.retreat);\r\n    };\r\n\r\n}\r\n\r\n//============================================================================\r\n// Spriteset_Battle\r\n//============================================================================    \r\n\r\nif (RS.ScreenManager.Params.isValidScaledBattleback) {\r\n\r\n    /**\r\n     * Override\r\n     * @method createBattleback\r\n     */\r\n    Spriteset_Battle.prototype.createBattleback = function () {\r\n        var margin = 0;\r\n        var x = -this._battleField.x - margin;\r\n        var y = -this._battleField.y - margin;\r\n        var width = Graphics.width + margin * 2;\r\n        var height = Graphics.height + margin * 2;\r\n        this._back1Sprite = new TilingSprite();\r\n        this._back2Sprite = new TilingSprite();\r\n        this._back1Sprite.bitmap = this.battleback1Bitmap();\r\n        this._back2Sprite.bitmap = this.battleback2Bitmap();\r\n        this._back1Sprite.move(x, y, width, height);\r\n        this._back2Sprite.move(x, y, width, height);\r\n        this._battleField.addChild(this._back1Sprite);\r\n        this._battleField.addChild(this._back2Sprite);\r\n    };\r\n\r\n    /**\r\n     * Override\r\n     * @method locateBattleback\r\n     */\r\n    Spriteset_Battle.prototype.locateBattleback = function () {\r\n\r\n        var sprite1 = this._back1Sprite;\r\n        var sprite2 = this._back2Sprite;\r\n        sprite1.origin.x = 0;\r\n        sprite2.origin.x = 0;\r\n        if ($gameSystem.isSideView()) {\r\n            sprite1.origin.y = 0;\r\n            sprite2.origin.y = 0;\r\n        }\r\n\r\n    };\r\n\r\n}\r\n\r\n//============================================================================\r\n//#region Sprite_Picture\r\n//============================================================================  \r\n\r\n(function () {\r\n\r\n    /**\r\n     * Find a script called \"DTextPicture.js\"\r\n     */\r\n    PluginManager._scripts.forEach(function (pluginName) {\r\n        if (pluginName === \"DTextPicture\") {\r\n            Imported.DTextPicture = true;\r\n        }\r\n    }, this);\r\n\r\n})();\r\n\r\nvar alias_Sprite_Picture_updatePosition = Sprite_Picture.prototype.updatePosition;\r\nSprite_Picture.prototype.updatePosition = function () {\r\n    if (RS.ScreenManager.Params.isAutoScaledPicture) return;\r\n    alias_Sprite_Picture_updatePosition.call(this);\r\n};\r\n\r\nvar alias_Sprite_Picture_updateScale = Sprite_Picture.prototype.updateScale;\r\nSprite_Picture.prototype.updateScale = function () {\r\n    if (RS.ScreenManager.Params.isAutoScaledPicture) return;\r\n    alias_Sprite_Picture_updateScale.call(this);\r\n};\r\n\r\nSprite_Picture.prototype.updateOriginScale = function () {\r\n    var picture = this.picture();\r\n    this.x = Math.floor(picture.x());\r\n    this.y = Math.floor(picture.y());\r\n    var originSX = picture.scaleX() / 100;\r\n    var originSY = picture.scaleY() / 100;\r\n    this.scale.x = originSX;\r\n    this.scale.y = originSY;\r\n};\r\n\r\nSprite_Picture.prototype.updateAutoScale = function () {\r\n\r\n    /**\r\n     * @type {Game_Picture}\r\n     */\r\n    var picture = this.picture();\r\n    var bitmap = this.bitmap;\r\n\r\n    if (!bitmap) {\r\n        this.updateOriginScale();\r\n        return;\r\n    }\r\n\r\n    // Sometimes the game picture has to use a default scale.\r\n    var blacklist = RS.ScreenManager.Params.ignoreAutoScalePictures || [];\r\n    if (blacklist.contains(this._pictureId)) {\r\n        this.updateOriginScale();\r\n        return;\r\n    }\r\n\r\n    var originSX = picture.scaleX() / 100;\r\n    var originSY = picture.scaleY() / 100;\r\n\r\n    // Get the original width and height values\r\n    var dw = bitmap.width * originSX;\r\n    var dh = bitmap.height * originSY;\r\n\r\n    // Can not divide with 0\r\n    if (dw === 0 || dh === 0) {\r\n        this.updateOriginScale();\r\n        return;\r\n    }\r\n\r\n    // Store the original coordinates before changing its size.\r\n    var x = picture.x();\r\n    var y = picture.y();\r\n\r\n    var originalViewWidth = parseInt(RS.ScreenManager.Params.originalPictureViewSize.width);\r\n    var originalViewHeight = parseInt(RS.ScreenManager.Params.originalPictureViewSize.height);\r\n    var scaleX = originSX;\r\n    var scaleY = originSY;\r\n\r\n    if (Graphics.boxWidth > originalViewWidth) {\r\n        scaleX = Graphics.boxWidth / originalViewWidth;\r\n    } else if (Graphics.boxWidth < originalViewWidth) {\r\n        scaleX = originalViewWidth / Graphics.boxWidth;\r\n    }\r\n\r\n    scaleY = Graphics.boxHeight / originalViewHeight;\r\n\r\n    // Perform re-scale and re-position.\r\n    this.scale.x = scaleX;\r\n    this.scale.y = scaleY;\r\n\r\n    if (RS.ScreenManager.Params.picturePosType === \"Virtual Coordinates\") {\r\n\r\n        var sw = bitmap.width * scaleX;\r\n        var sh = bitmap.height * scaleY;\r\n        var dx = x * (sw / dw);\r\n        var dy = y * (sh / dh);\r\n\r\n        this.x = Math.floor(dx);\r\n        this.y = Math.floor(dy);\r\n\r\n    } else {\r\n\r\n        this.x = Math.floor(x);\r\n        this.y = Math.floor(y);\r\n\r\n    }\r\n\r\n};\r\n\r\nvar alias_Sprite_Picture_update = Sprite_Picture.prototype.update;\r\nSprite_Picture.prototype.update = function () {\r\n    alias_Sprite_Picture_update.call(this);\r\n    if (this.visible && RS.ScreenManager.Params.isAutoScaledPicture) {\r\n        this.updateAutoScale();\r\n    }\r\n};\r\n\r\n//#endregion\r\n\r\n//#region Rescaling Background\r\n//============================================================================\r\n// Scene_Base\r\n//============================================================================\r\n\r\nScene_Base.prototype.requestStretch = function (sprite) {\r\n    if (!sprite.bitmap) return;\r\n    var bitmap = sprite.bitmap;\r\n    if (bitmap.width <= 0) return;\r\n    if (bitmap.height <= 0) return;\r\n    var scaleX = Graphics.boxWidth / bitmap.width;\r\n    var scaleY = Graphics.boxHeight / bitmap.height;\r\n    sprite.scale.x = (scaleX > 1.0) ? scaleX : 1.0;\r\n    sprite.scale.y = (scaleY > 1.0) ? scaleY : 1.0;\r\n    sprite.x = Graphics.boxWidth / 2;\r\n    sprite.y = Graphics.boxHeight / 2;\r\n    sprite.anchor.x = 0.5;\r\n    sprite.anchor.y = 0.5;\r\n};\r\n\r\n//============================================================================\r\n// Scene_MenuBase\r\n//============================================================================\r\n\r\nvar alias_Scene_MenuBase_start = Scene_MenuBase.prototype.start;\r\nScene_MenuBase.prototype.start = function () {\r\n    alias_Scene_MenuBase_start.call(this);\r\n    this.requestStretch(this._backgroundSprite);\r\n};\r\n\r\n//============================================================================\r\n// Window\r\n//============================================================================\r\n\r\nif (RS.ScreenManager.Params.settings.defaultScreenSize.x <= 320 &&\r\n    RS.ScreenManager.Params.settings.defaultScreenSize.y <= 240) {\r\n    var alias_Window_Command_windowWidth = Window_Command.prototype.windowWidth;\r\n    Window_Command.prototype.windowWidth = function () {\r\n        return Graphics.getVirtualWidth(alias_Window_Command_windowWidth.call(this));\r\n    };\r\n\r\n    var alias_Window_Command_lineHeight = Window_Command.prototype.lineHeight;\r\n    Window_Command.prototype.lineHeight = function () {\r\n        return Graphics.getVirtualHeight(alias_Window_Command_lineHeight.call(this));\r\n    };\r\n\r\n    var alias_Window_Base_standardFontSize = Window_Base.prototype.standardFontSize;\r\n    Window_Base.prototype.standardFontSize = function () {\r\n        return Graphics.getVirtualHeight(alias_Window_Base_standardFontSize.call(this));\r\n    };\r\n\r\n    var alias_Window_Base_standardPadding = Window_Base.prototype.standardPadding;\r\n    Window_Base.prototype.standardPadding = function () {\r\n        return Graphics.getVirtualWidth(alias_Window_Base_standardPadding.call(this));\r\n    };\r\n\r\n    var alias_Window_Selectable_spacing = Window_Selectable.prototype.spacing;\r\n    Window_Selectable.prototype.spacing = function () {\r\n        return Graphics.getVirtualWidth(alias_Window_Selectable_spacing.call(this));\r\n    };\r\n\r\n    var alias_Window_Options_windowWidth = Window_Options.prototype.windowWidth;\r\n    Window_Options.prototype.windowWidth = function () {\r\n        return Graphics.getVirtualWidth(alias_Window_Options_windowWidth.call(this));\r\n    };\r\n\r\n    var alias_Window_Options_statusWidth = Window_Options.prototype.statusWidth;\r\n    Window_Options.prototype.statusWidth = function () {\r\n        return Graphics.getVirtualWidth(alias_Window_Options_statusWidth.call(this));\r\n    };\r\n\r\n    class Window_MenuCommandImpl extends Window_MenuCommand {\r\n        windowWidth() {\r\n            return Graphics.getVirtualWidth(super.windowWidth());\r\n        }\r\n    }\r\n\r\n    window.Window_MenuCommand = Window_MenuCommandImpl;\r\n\r\n    class Window_MenuStatusImpl extends Window_MenuStatus {\r\n        windowWidth() {\r\n            return Graphics.boxWidth - Graphics.getVirtualWidth(240);\r\n        }\r\n    }\r\n\r\n    window.Window_MenuStatus = Window_MenuStatusImpl;\r\n\r\n    class Window_GoldImpl extends Window_Gold {\r\n        windowWidth() {\r\n            return Graphics.getVirtualWidth(super.windowWidth());\r\n        }\r\n    }\r\n\r\n    window.Window_Gold = Window_GoldImpl;\r\n\r\n    class Window_GameEndImpl extends Window_GameEnd {\r\n        windowWidth() {\r\n            return Graphics.getVirtualWidth(super.windowWidth());\r\n        }\r\n    }\r\n\r\n    window.Window_GameEnd = Window_GameEndImpl;\r\n}\r\n\r\n//============================================================================\r\n// Scene_Title\r\n//============================================================================\r\n\r\nclass Window_TitleCommandImpl extends Window_TitleCommand {\r\n\r\n    updatePlacement() {\r\n        this.x = (Graphics.boxWidth - this.width) / 2;\r\n        this.y = Graphics.boxHeight - this.height - Graphics.getVirtualHeight(96);\r\n    }\r\n\r\n    windowWidth() {\r\n        return Graphics.getVirtualWidth(super.windowWidth());\r\n    }\r\n\r\n}\r\n\r\nwindow.Window_TitleCommand = Window_TitleCommandImpl;\r\n\r\nvar alias_Scene_Title_start = Scene_Title.prototype.start;\r\nScene_Title.prototype.start = function () {\r\n    alias_Scene_Title_start.call(this);\r\n    this.requestStretch(this._backSprite1);\r\n    this.requestStretch(this._backSprite2);\r\n};\r\n\r\nScene_Title.prototype.drawGameTitle = function () {\r\n    var x = 20;\r\n    var y = Graphics.height / 4;\r\n    var maxWidth = Graphics.width - x * 2;\r\n    var text = $dataSystem.gameTitle;\r\n\r\n    this._gameTitleSprite.bitmap.outlineColor = 'black';\r\n    this._gameTitleSprite.bitmap.outlineWidth = Graphics.getVirtualWidth(8);\r\n    this._gameTitleSprite.bitmap.fontSize = Graphics.getVirtualHeight(72);\r\n    this._gameTitleSprite.bitmap.drawText(text, x, y, maxWidth, Graphics.getVirtualWidth(48), 'center');\r\n};\r\n\r\n//============================================================================\r\n// Scene_Gameover\r\n//============================================================================\r\n\r\nvar alias_Scene_Gameover_start = Scene_Gameover.prototype.start;\r\nScene_Gameover.prototype.start = function () {\r\n    alias_Scene_Gameover_start.call(this);\r\n    this.requestStretch(this._backSprite);\r\n};\r\n\r\n//#endregion","//============================================================================\r\n// Game_Interpreter\r\n//============================================================================\r\n\r\nvar alias_Game_Interpreter_pluginCommand = Game_Interpreter.prototype.pluginCommand;\r\nGame_Interpreter.prototype.pluginCommand = function (command, args) {\r\n    alias_Game_Interpreter_pluginCommand.call(this, command, args);\r\n    if (command === \"ScreenManager\") {\r\n        switch (args[0]) {\r\n            case 'Start':\r\n                if (Utils.isNwjs()) {\r\n                    SceneManager.push(ScreenManager);\r\n                }\r\n                break;\r\n        }\r\n    }\r\n};\r\n","\"use strict\";\r\n\r\nwindow.Imported = window.Imported || {};\r\nwindow.Imported.RS_ScreenManager = true;\r\n\r\nwindow.RS = window.RS || {};\r\nwindow.RS.ScreenManager = window.RS.ScreenManager || {};\r\nwindow.RS.ScreenManager.Params = window.RS.ScreenManager.Params || {};\r\n\r\nimport parameters from \"./parameters\";\r\n\r\nRS.ScreenManager.jsonParse = function (str) {\r\n    var retData = JSON.parse(str, function (k, v) {\r\n    try { return RS.ScreenManager.jsonParse(v); } catch (e) { return v; }\r\n    });\r\n    return retData;\r\n};\r\n\r\nvar getTargetRegex = /(\\d+)[ ]x[ ](\\d+)/i;\r\n\r\n/**\r\n * @type {{resize: Boolean, autoScaling: Boolean, minWidth: Boolean, minHeight: Boolean, recreate: Boolean, allResolutions: Boolean, aspectRatio: Boolean, isAutoSyncManifest: Boolean}}\r\n */\r\nvar options = {};\r\nvar settings = {};\r\n\r\noptions.resize = Boolean(parameters['isGraphicsRendererResize'] === 'true');\r\noptions.autoScaling = Boolean(parameters['isGraphicsRendererResize'] === 'true');\r\noptions.minWidth = Boolean(parameters['isMaintainingMinimumWidth'] === 'true');\r\noptions.minHeight = Boolean(parameters['isMaintainingMinimumHeight'] === 'true');\r\noptions.recreate = Boolean(parameters['isMaintainingMinimumHeight'] === 'true');\r\noptions.allResolutions = Boolean(parameters['Use All Resolutions'] === 'true');\r\noptions.aspectRatio = Boolean(parameters['Enable Custom Aspect Ratio'] === 'true');\r\noptions.isAutoSyncManifest = Boolean(parameters['Auto Sync Manifest file'] === 'true');\r\n\r\nsettings.customAspectRatio = parameters['Custom Aspect Ratio'] || \"16:9\";\r\nsettings.customAspectRatio = settings.customAspectRatio.trim().split(\":\");\r\nsettings.ptCustomScreenSize = String(parameters[\"Default Screen Size\"] || '1280 x 720').split(' x ');\r\nsettings.defaultScreenSize = new Point(\r\n    (parseInt(settings.ptCustomScreenSize[0]) || 1280),\r\n    (parseInt(settings.ptCustomScreenSize[1]) || 720));\r\nsettings.pcGraphicsArray = [];\r\nsettings.pcGraphicsTempArray = RS.ScreenManager.jsonParse(parameters[\"PC\"]);\r\nsettings.mobileGraphicsArray = RS.ScreenManager.jsonParse(parameters[\"Mobile\"]);\r\nsettings.resolutionQualityOnMobile = RS.ScreenManager.jsonParse(parameters[\"Mobile Simple\"]);\r\nsettings.state = \"ready\";\r\n\r\n// Parameters\r\nRS.ScreenManager.Params.settings = settings;\r\nRS.ScreenManager.Params.options = options;\r\nRS.ScreenManager.Params.fullscreenFlag = false;\r\nRS.ScreenManager.Params.isUsedNodeLibrary = Boolean(parameters[\"Bind Node Library\"] === \"true\");\r\n\r\nRS.ScreenManager.Params.isAutoScaledPicture = Boolean(parameters[\"Scaled Picture\"] === \"true\");\r\n\r\nRS.ScreenManager.Params.ignoreAutoScalePictures = RS.ScreenManager.jsonParse(parameters[\"Ignore Auto Scale\"]);\r\n\r\nRS.ScreenManager.Params.originalPictureViewSize = RS.ScreenManager.jsonParse(parameters[\"Original View Size\"]);\r\n\r\n/**\r\n * Screen Size : 1280, 720\r\n * Picture's Size : 816, 614,\r\n * Picture's Position : 816, 614\r\n * Actual Coordinates : 816, 614\r\n * Virtual Coordinates (Maintain ratio) : 1280, 720\r\n */\r\nRS.ScreenManager.Params.picturePosType = parameters[\"Picture Position Type\"] || \"Actual Coordinates\";\r\n\r\n/**\r\n * if it is to true, it adds resolution select button in the option window.\r\n */\r\nRS.ScreenManager.Params.isValidOptionWindow = Utils.isMobileDevice() ? false : true;\r\n\r\nRS.ScreenManager.Params.isValidScaledBattleback = Boolean(parameters[\"Scaled Battleback\"] === \"true\");\r\n\r\nRS.ScreenManager.Params.actorFunc = {\r\n    moveToStartPosition: RS.ScreenManager.jsonParse(parameters[\"ActorFunc.moveToStartPosition\"]),\r\n    setActorHome: RS.ScreenManager.jsonParse(parameters[\"ActorFunc.setActorHome\"]),\r\n    stepForward: RS.ScreenManager.jsonParse(parameters[\"ActorFunc.stepForward\"]),\r\n    stepBack: RS.ScreenManager.jsonParse(parameters[\"ActorFunc.stepBack\"]),\r\n    retreat: RS.ScreenManager.jsonParse(parameters[\"ActorFunc.retreat\"]),\r\n};"],"sourceRoot":""}