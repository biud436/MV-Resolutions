{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./lib/parameters.js","webpack:///external \"nw.gui\"","webpack:///external \"path\"","webpack:///external \"fs\"","webpack:///./lib/2_core.js","webpack:///external \"child_process\"","webpack:///./lib/3_localization.js","webpack:///./lib/5_loadDLL.js","webpack:///./lib sync","webpack:///./lib/6_ScreenConfig.js","webpack:///./lib/7_Graphics.js","webpack:///./lib/8_Scene_Boot.js","webpack:///./lib/9_SceneManager.js","webpack:///./lib/10_ScreenManager.js","webpack:///./lib/11_Game_System.js","webpack:///./lib/12_Window_Options.js","webpack:///./lib/13_Window_ResolutionList.js","webpack:///./lib/14_ResizeGraphicsObjects.js","webpack:///./lib/15_Game_Interpreter.js","webpack:///./lib/1_public.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","parameters","$plugins","filter","description","contains","length","require","RS","ScreenManager","initWithMobile","replaceBy","mod","cb","item","JSON","stringify","replace","screen","availWidth","availHeight","window","outerWidth","outerHeight","jsonParse","Params","settings","resolutionQualityOnMobile","mobileGraphicsArray","readManifestFile","Utils","RPGMAKER_VERSION","isNwjs","options","isAutoSyncManifest","fs","path","dirname","process","mainModule","filename","packageJsonPath","join","existsSync","config","parse","readFileSync","fullscreen","fullscreenFlag","defaultScreenSize","x","width","y","height","ptCustomScreenSize","toString","Window","on","f","isFullscreen","changeManifestFile","isWindowsTaskbarShown","switchFullScreen","toggleFullscreen","Graphics","_switchFullScreen","isFullScreen","_isFullScreen","templatePackageConfig","writeFileSync","packageConfig","restartGame","childProcess","projectPath","execFile","execPath","err","console","warn","uniqArray","data","uniqData","foundData","forEach","packData","push","this","PrivateLocalization","newLocalization","langCode","navigator","language","slice","eval","Language","type","code","lang","en","localization","isUsedNodeLibrary","pcGraphicsArray","pcGraphicsTempArray","allResolutions","platform","base","fileVersion","processArch","arch","versions","node","isOptionValid","state","alert","targetName","copyFile","fileName","getAbsolutePath","items","GetDisplaySettings","error","webpackEmptyContext","req","e","Error","keys","resolve","id","ScreenConfig","initialize","apply","arguments","CustomScreenConfig","constructor","originWidth","originHeight","orientation","_originWidth","_originHeight","_orientation","_aspectRatio","getRatio","gcd","q","getSize","virtualWidth","parseInt","Math","round","getHeight","getRatioAsString","temp","Number","getWidth","newHeight","ar","parseFloat","newWidth","a","b","Point","getAvailGraphicsArray","returnType","tw","th","pt","gArray","result","maxSW","maxSH","isMobileDevice","match","customAspectRatio","sw","sh","aspectRatio","getOrientation","inner","innerWidth","innerHeight","isAvailScreenHeight","task_height","uniqWithPoint","callback","getVirtualWidth","originValue","ratio","boxWidth","floor","getVirtualHeight","boxHeight","setScreenResize","newScr","cx","cy","xPadding","yPadding","minW","minH","SceneManager","_screenWidth","_screenHeight","_boxWidth","_boxHeight","$gameMap","tileWidth","tileHeight","_renderer","autoScaling","ret","newData","pop","resizeTo","moveTo","minWidth","max","minHeight","clamp","resize","recreate","_scene","Scene_Boot","PluginManager","_scripts","initNwjs","gui","win","menu","menubar","Menu","createMacBuiltin","hideEdit","hideWindow","run","sceneClass","goto","requestUpdate","catchException","alias_Graphics_onWindowResize","_onWindowResize","nw","setPosition","alias_Scene_Boot_create","initResolution","size","mobile","defScrWidth","defScrHeight","newSize","Scene_Base","createWindowLayer","createAvailGraphicsList","createPanel","makeSpriteForPanel","color1","Window_Base","dimColor1","color2","dimColor2","sprite","Sprite","Bitmap","userAgent","bitmap","fillAll","gradientFillRect","drawText","nx","_availGraphicsList","ny","_panel","addChild","setHandler","convertScreenSize","popScene","createDisplayList","Window_ResolutionList","Window_ResolutionListForMobile","addWindow","convertWithAspectRatio","insData","convertWithNwjs","scr","getCurrentItemToPoint","convertWithOther","flushScreen","$gameSystem","_lastScreenManagerItem","index","alias_Game_System_initialize","Game_System","isValidOptionWindow","alias_Window_Options_initialize","Window_Options","_lastIndex","isResolution","symbol","isAspectRatio","processOk","commandSymbol","getConfigValue","isVolumeSymbol","volumeOffset","changeValue","alias_Window_Options_cursorRight","cursorRight","wrap","alias_Window_Options_cursorLeft","cursorLeft","statusText","idx","volumeStatusText","String","booleanStatusText","alias_Window_Options_addVolumeOptions","addVolumeOptions","addCommand","Window_Selectable","initMembers","initWithItemPoint","refresh","activate","select","_windowFrameSprite","visible","_index","_item","lineHeight","initWithAspectRatio","fullscreenData","_itemToPoint","maxItems","_data","makeItemList","uniq","isCurrentItemEnabled","isEnabled","resetFontSettings","contents","fontFace","standardFontFace","fontSize","standardFontSize","outlineColor","rgbToCssColor","outlineWidth","resetTextColor","drawItem","rect","itemRectForText","text","createContents","drawAllItems","indexOf","Sprite_Base","requestStretch","scaleX","scaleY","scale","picturePosType","dw","dh","dx","dy","TilingSprite","reqeustResizeImage","texture","frame","PIXI","Rectangle","isValidResizing","isValidScaledBattleback","opacity","_url","fileUri","split","folderName","_folderName","resizeImage","alias_TilingSprite__onBitmapLoad","_onBitmapLoad","Imported","YEP_BattleEngineCore","Sprite_Actor","moveToStartPosition","$","actorFunc","setActorHome","stepForward","stepBack","retreat","Spriteset_Battle","createBattleback","_battleField","margin","_back1Sprite","_back2Sprite","battleback1Bitmap","battleback2Bitmap","move","locateBattleback","sprite1","sprite2","origin","isSideView","pluginName","DTextPicture","alias_Sprite_Picture_updatePosition","Sprite_Picture","updatePosition","isAutoScaledPicture","alias_Sprite_Picture_updateScale","updateScale","updateOriginScale","picture","originSX","originSY","updateAutoScale","ignoreAutoScalePictures","_pictureId","originalViewWidth","originalPictureViewSize","originalViewHeight","alias_Sprite_Picture_update","update","anchor","alias_Scene_MenuBase_start","Scene_MenuBase","start","_backgroundSprite","alias_Window_Command_windowWidth","Window_Command","windowWidth","alias_Window_Command_lineHeight","alias_Window_Base_standardFontSize","alias_Window_Base_standardPadding","standardPadding","alias_Window_Selectable_spacing","spacing","alias_Window_Options_windowWidth","alias_Window_Options_statusWidth","statusWidth","Window_MenuCommandImpl","Window_MenuCommand","super","Window_MenuStatusImpl","Window_MenuStatus","Window_GoldImpl","Window_Gold","Window_GameEndImpl","Window_GameEnd","Window_TitleCommandImpl","Window_TitleCommand","alias_Scene_Title_start","Scene_Title","_backSprite1","_backSprite2","drawGameTitle","maxWidth","$dataSystem","gameTitle","_gameTitleSprite","alias_Scene_Gameover_start","Scene_Gameover","_backSprite","alias_Game_Interpreter_pluginCommand","Game_Interpreter","pluginCommand","command","args","RS_ScreenManager","str","k","v","Boolean","trim"],"mappings":"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","file":"RS_ScreenManager.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 20);\n","var parameters = $plugins.filter(function (i) {\r\n    return i.description.contains('<RS_ScreenManager>');\r\n});\r\n\r\nparameters = (parameters.length > 0) && parameters[0].parameters;\r\n\r\nexport default parameters;","module.exports = require(\"nw.gui\");","module.exports = require(\"path\");","module.exports = require(\"fs\");","/**\r\n * Replace by target screen width and height values.\r\n */\r\nRS.ScreenManager.initWithMobile = function () {\r\n\r\n    function replaceBy(mod, cb) {\r\n        var item = JSON.stringify(mod);\r\n        item = item.replace(\"screen.availWidth\", screen.availWidth);\r\n        item = item.replace(\"screen.availHeight\", screen.availHeight);\r\n        item = item.replace(\"window.outerWidth\", window.outerWidth);\r\n        item = item.replace(\"window.outerHeight\", window.outerHeight);\r\n        mod = RS.ScreenManager.jsonParse(item);\r\n        cb(mod);\r\n    }\r\n\r\n    replaceBy(RS.ScreenManager.Params.settings.resolutionQualityOnMobile, function (mod) {\r\n        RS.ScreenManager.Params.settings.resolutionQualityOnMobile = mod;\r\n    });\r\n\r\n    replaceBy(RS.ScreenManager.Params.settings.mobileGraphicsArray, function (mod) {\r\n        RS.ScreenManager.Params.settings.mobileGraphicsArray = mod;\r\n    });\r\n\r\n};\r\n\r\nRS.ScreenManager.initWithMobile();\r\n\r\n/**\r\n * Read a manifest file called 'package.json'.\r\n */\r\nRS.ScreenManager.readManifestFile = function () {\r\n    if (Utils.RPGMAKER_VERSION < '1.6.1') return;\r\n    if (!Utils.isNwjs()) return;\r\n    if (!RS.ScreenManager.Params.options.isAutoSyncManifest) return;\r\n    var fs = require('fs');\r\n    var path = require('path');\r\n    var dirname = path.dirname(process.mainModule.filename);\r\n    var packageJsonPath = path.join(dirname, \"package.json\");\r\n    if (fs.existsSync(packageJsonPath)) {\r\n        var packageConfig = JSON.parse(fs.readFileSync(packageJsonPath, \"utf8\"));\r\n        var config = packageConfig.window;\r\n        if (config && config.fullscreen) {\r\n            RS.ScreenManager.Params.fullscreenFlag = config.fullscreen;\r\n            RS.ScreenManager.Params.settings.defaultScreenSize.x = config.width;\r\n            RS.ScreenManager.Params.settings.defaultScreenSize.y = config.height;\r\n            RS.ScreenManager.Params.settings.ptCustomScreenSize = RS.ScreenManager.Params.settings.defaultScreenSize.toString();\r\n        }\r\n    }\r\n\r\n    var win = require('nw.gui').Window.get();\r\n\r\n    win.on('resize', function (width, height) {\r\n        var f = RS.ScreenManager.isFullscreen();\r\n        RS.ScreenManager.changeManifestFile(width, height, f);\r\n    });\r\n\r\n};\r\n\r\nRS.ScreenManager.isWindowsTaskbarShown = function () {\r\n    return screen.availHeight !== screen.height;\r\n};\r\n\r\nRS.ScreenManager.switchFullScreen = function () {\r\n    if (Utils.isNwjs()) {\r\n        var gui = require('nw.gui');\r\n        var win = gui.Window.get();\r\n        win.toggleFullscreen();\r\n    } else {\r\n        Graphics._switchFullScreen();\r\n    }\r\n};\r\n\r\nRS.ScreenManager.isFullscreen = function () {\r\n    if (Utils.isNwjs()) {\r\n        var gui = require('nw.gui');\r\n        var win = gui.Window.get();\r\n\r\n        return win.isFullScreen;\r\n\r\n    } else {\r\n        return Graphics._isFullScreen();\r\n    }\r\n};\r\n\r\n/**\r\n * Change the manifest file called 'package.json' and then beautifies line spaces.\r\n */\r\nRS.ScreenManager.changeManifestFile = function (width, height, fullscreen) {\r\n\r\n    if (Utils.RPGMAKER_VERSION < '1.6.1') return;\r\n    var fs = require('fs');\r\n    var path = require('path');\r\n    var dirname = path.dirname(process.mainModule.filename);\r\n    var packageJsonPath = path.join(dirname, \"package.json\");\r\n\r\n    var templatePackageConfig = {\r\n        \"name\": \"mytest\",\r\n        \"main\": \"index.html\",\r\n        \"js-flags\": \"--expose-gc\",\r\n        \"crhomium-args\": \"--disable-sync\",\r\n        \"window\": {\r\n            \"title\": \"\",\r\n            \"toolbar\": false,\r\n            \"width\": RS.ScreenManager.Params.settings.defaultScreenSize.x,\r\n            \"height\": RS.ScreenManager.Params.settings.defaultScreenSize.y,\r\n            \"icon\": \"icon/icon.png\"\r\n        }\r\n    };\r\n\r\n    // if the config file exists?\r\n    if (fs.existsSync(packageJsonPath)) {\r\n        var packageConfig = JSON.parse(fs.readFileSync(packageJsonPath, \"utf8\"));\r\n        packageConfig.window.width = width;\r\n        packageConfig.window.height = height;\r\n        packageConfig.window.fullscreen = fullscreen;\r\n\r\n        fs.writeFileSync(packageJsonPath, JSON.stringify(packageConfig, null, '\\t'));\r\n\r\n    } else {\r\n\r\n        fs.writeFileSync(packageJsonPath, JSON.stringify(templatePackageConfig, null, '\\t'));\r\n        return RS.ScreenManager.changeManifestFile(width, height, fullscreen);\r\n\r\n    }\r\n\r\n};\r\n\r\n/**\r\n * In the RPG Maker MV v1.5.2 or less, \r\n * if the executable file name is the same as Game.exe, it couldn't be read the node library. \r\n * So its name must change with 'nw.exe' and then we must restart the game.\r\n */\r\nRS.ScreenManager.restartGame = function () {\r\n    var childProcess = require(\"child_process\");\r\n    var path = require('path');\r\n    var projectPath = path.dirname(process.mainModule.filename);\r\n    childProcess.execFile(process.execPath, [projectPath], function (err) {\r\n        if (err) console.warn(err);\r\n    });\r\n};\r\n\r\n/**\r\n * https://stackoverflow.com/a/20339709\r\n * @param {Array} data \r\n */\r\nRS.ScreenManager.uniqArray = function (data) {\r\n    var uniqData = [];\r\n    var foundData = {};\r\n\r\n    data.forEach(function (i) {\r\n        var packData = JSON.stringify(i);\r\n        if (!foundData[packData]) {\r\n            uniqData.push(i);\r\n            foundData[packData] = true;\r\n        }\r\n    }, this);\r\n\r\n    return uniqData;\r\n\r\n}","module.exports = require(\"child_process\");","import parameters from \"./parameters\";\r\n\r\nvar PrivateLocalization = function () {};\r\n\r\nvar newLocalization = RS.ScreenManager.jsonParse(parameters[\"Localization\"]);\r\nvar langCode = navigator.language.slice(0, 2);\r\n\r\nPrivateLocalization.prototype = {\r\n    \"code\": eval(newLocalization.Language),\r\n    \"get\": function (type) {\r\n        var code = this.code;\r\n        var lang = PrivateLocalization[code];\r\n        return (lang) ? lang[type] : PrivateLocalization.en[type];\r\n    }\r\n};\r\n\r\nnewLocalization[\"Localization\"].forEach(function (i) {\r\n    var lang = i.lang;\r\n    PrivateLocalization[lang] = i;\r\n});\r\n\r\nRS.ScreenManager.localization = new PrivateLocalization();","//============================================================================\r\n// Load the node library and then retrieves information about the display RS.ScreenManager.Params.settings.\r\n// using the Windows API called EnumDisplaySetting(User32.dll)\r\n//============================================================================  \r\n\r\n(function initWithSettings() {\r\n\r\n    \"use strict\";\r\n\r\n    try {\r\n\r\n        if (Utils.isNwjs()) {\r\n\r\n            // if you didn't have node library, it will set as a default resolution list.\r\n            if (!RS.ScreenManager.Params.isUsedNodeLibrary) {\r\n                RS.ScreenManager.Params.settings.pcGraphicsArray = RS.ScreenManager.Params.settings.pcGraphicsTempArray;\r\n                RS.ScreenManager.Params.options.allResolutions = true;\r\n                return;\r\n            }\r\n\r\n            var path = require('path'),\r\n                fs = require('fs'),\r\n                platform = process.platform;\r\n            const base = process.mainModule.filename;\r\n\r\n            switch (platform) {\r\n                case 'win32':\r\n\r\n                    var fileVersion = \"v1.2.0\";\r\n                    var processArch = process.arch;\r\n\r\n                    if (Utils.RPGMAKER_VERSION >= \"1.6.1\") {\r\n                        /**\r\n                         * Original Versions in RMMV 1.6.1 : \r\n                             ares: \"1.13.0\"\r\n                            chromium: \"65.0.3325.181\"\r\n                            cldr: \"32.0\"\r\n                            http_parser: \"2.8.0\"\r\n                            icu: \"60.1\"\r\n                            modules: \"59\"\r\n                            napi: \"3\"\r\n                            nghttp2: \"1.29.0\"\r\n                            node: \"9.11.1\"\r\n                            node-webkit: \"0.29.4\"\r\n                            nw: \"0.29.4\"\r\n                            nw-commit-id: \"6a254fe-1c00f31-b892847-deb9bc6\"\r\n                            nw-flavor: \"sdk\"\r\n                            openssl: \"1.0.2o\"\r\n                            tz: \"2017c\"\r\n                            unicode: \"10.0\"\r\n                            uv: \"1.19.2\"\r\n                            v8: \"6.5.254.41\"\r\n                            zlib: \"1.2.11\"\r\n\r\n                        * Node Webkit Version in My Computer:\r\n                            ares: \"1.14.0\"\r\n                            chromium: \"69.0.3497.100\"\r\n                            cldr: \"33.1\"\r\n                            http_parser: \"2.8.0\"\r\n                            icu: \"62.1\"\r\n                            modules: \"64\"\r\n                            napi: \"3\"\r\n                            nghttp2: \"1.33.0\"\r\n                            node: \"10.11.0\"\r\n                            node-webkit: \"0.33.4\"\r\n                            nw: \"0.33.4\"\r\n                            nw-commit-id: \"3d7302c-de9606e-577bc92-58acf98\"\r\n                            nw-flavor: \"sdk\"\r\n                            openssl: \"1.1.0i\"\r\n                            tz: \"2018e\"\r\n                            unicode: \"11.0\"\r\n                            uv: \"1.23.0\"\r\n                            v8: \"6.9.427.23\"\r\n                            zlib: \"1.2.11\"              \r\n                            */\r\n                        fileVersion = `v${process.versions.node}`;\r\n                    }\r\n\r\n                    // It must change the filename as 'nw.exe' in RPG Maker MV 1.5.2 or less.\r\n                    if (process.versions.node == \"1.2.0\" && process.execPath.contains(\"Game.exe\")) {\r\n\r\n                        // if the game plays in the test play mode, it does not show up the alert window.\r\n                        if (Utils.isOptionValid('test') || Utils.isOptionValid('etest') || Utils.isOptionValid('btest')) {\r\n\r\n                            RS.ScreenManager.Params.settings.state = \"initialized\";\r\n                            RS.ScreenManager.Params.settings.pcGraphicsArray = RS.ScreenManager.Params.settings.pcGraphicsTempArray;\r\n                            return;\r\n\r\n                        } else {\r\n\r\n                            window.alert(RS.ScreenManager.localization.get(\"NotFoundNwExe\"));\r\n                            var targetName = path.join(process.execPath, \"..\", \"nw.exe\");\r\n                            fs.copyFile(process.execPath, targetName, \"utf8\", function (err, data) {});\r\n\r\n                        }\r\n\r\n                    }\r\n\r\n                    var fileName = path.join(base, \"..\", `js/libs/${fileVersion}-winDisplaySettings-${processArch}.node`);\r\n                    fileName = Utils.getAbsolutePath(fileName);\r\n\r\n                    // if the library file exists?\r\n                    if (fs.existsSync(fileName)) {\r\n\r\n                        var display = require(fileName);\r\n\r\n                        // Remove duplicate items from the list.\r\n                        var items = display.GetDisplaySettings();\r\n\r\n                        RS.ScreenManager.Params.settings.pcGraphicsArray = items;\r\n\r\n                        RS.ScreenManager.Params.settings.state = \"initialized\";\r\n\r\n                    } else {\r\n                        window.alert(RS.ScreenManager.localization.get(\"NotFoundError\"));\r\n                        RS.ScreenManager.Params.settings.state = \"failed\";\r\n                        // Set Default Resolution\r\n                        RS.ScreenManager.Params.settings.pcGraphicsArray = RS.ScreenManager.Params.settings.pcGraphicsTempArray;\r\n                        RS.ScreenManager.Params.options.allResolutions = true;\r\n                    }\r\n\r\n                    break;\r\n\r\n                default:\r\n                    // in case of Mac OS (base on darwin, linux)\r\n                    RS.ScreenManager.Params.settings.pcGraphicsArray = RS.ScreenManager.Params.settings.pcGraphicsTempArray;\r\n                    RS.ScreenManager.Params.options.allResolutions = true;\r\n                    break;\r\n            }\r\n        }\r\n\r\n    } catch (error) {\r\n        console.warn(error);\r\n        RS.ScreenManager.Params.settings.pcGraphicsArray = RS.ScreenManager.Params.settings.pcGraphicsTempArray;\r\n        RS.ScreenManager.Params.options.allResolutions = true;\r\n    }\r\n\r\n})();\r\n","function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 9;","//============================================================================\r\n// ScreenConfig\r\n//============================================================================\r\n\r\nfunction ScreenConfig() {\r\n    this.initialize.apply(this, arguments);\r\n};\r\n\r\nScreenConfig.prototype.constructor = ScreenConfig;\r\nScreenConfig.prototype.initialize = function (originWidth, originHeight, orientation) {\r\n    this._originWidth = originWidth;\r\n    this._originHeight = originHeight;\r\n    this._orientation = orientation;\r\n    this._aspectRatio = this.getRatio(originWidth, originHeight);\r\n};\r\n\r\nScreenConfig.prototype.gcd = function (p, q) {\r\n    var self = this;\r\n    if (q === 0) return p;\r\n\r\n    return this.gcd(q, p % q);\r\n\r\n};\r\n\r\nScreenConfig.prototype.getSize = function (virtualWidth) {\r\n    var ret, w, h;\r\n\r\n    w = parseInt(virtualWidth);\r\n    h = parseInt(Math.round(this.getHeight(virtualWidth)));\r\n    ret = [w, h];\r\n\r\n    return ret;\r\n};\r\n\r\nScreenConfig.prototype.getRatio = function (width, height) {\r\n    var gcd, ret;\r\n    if (width === height) return [1, 1];\r\n    gcd = this.gcd(width, height);\r\n    ret = [(width / gcd), (height / gcd)];\r\n    return ret;\r\n};\r\n\r\nScreenConfig.prototype.getRatioAsString = function (width, height) {\r\n    var gcd, temp, ret;\r\n    if (width === height) return [1, 1];\r\n    if (width < height) {\r\n        temp = width;\r\n        width = height;\r\n        height = temp;\r\n    }\r\n    gcd = this.gcd(width, height);\r\n    ret = Number(width / gcd) + ':' + Number(height / gcd);\r\n\r\n    return ret;\r\n\r\n};\r\n\r\nScreenConfig.prototype.getWidth = function (newHeight) {\r\n    var ar = this._aspectRatio;\r\n    var ratio = parseFloat(ar[0] / ar[1]);\r\n\r\n    return ratio * newHeight;\r\n\r\n};\r\n\r\nScreenConfig.prototype.getHeight = function (newWidth) {\r\n    var ar = this._aspectRatio;\r\n    var ratio = parseFloat(ar[1] / ar[0]);\r\n\r\n    return ratio * newWidth;\r\n\r\n};\r\n\r\nwindow.ScreenConfig = ScreenConfig;\r\n\r\n//============================================================================\r\n// CustomScreenConfig\r\n//============================================================================\r\nfunction CustomScreenConfig() {\r\n    this.initialize.apply(this, arguments);\r\n};\r\n\r\nCustomScreenConfig.prototype = Object.create(ScreenConfig.prototype);\r\nCustomScreenConfig.prototype.constructor = CustomScreenConfig;\r\n\r\nCustomScreenConfig.prototype.initialize = function (a, b) {\r\n    // We don't need parameters,\r\n    // But it is just for calling the constructor of corresponding superclass.\r\n    ScreenConfig.prototype.initialize.call(this, 1600, 900, 'landscape');\r\n    a = a || 16;\r\n    b = b || 9;\r\n    this._aspectRatio = [a, b];\r\n};\r\n\r\nwindow.CustomScreenConfig = CustomScreenConfig;\r\n\r\n//============================================================================\r\n// Point\r\n//============================================================================\r\nPoint.prototype.toString = function () {\r\n    return this.x + ' x ' + this.y;\r\n};\r\n","//============================================================================\r\n// Graphics\r\n//============================================================================\r\n\r\nGraphics.getAvailGraphicsArray = function (returnType) {\r\n    var data, tw, th, pt, gArray, result, maxSW, maxSH, type;\r\n    var orientation, config, aspectRatio;\r\n    var temp, ret;\r\n\r\n    gArray = [];\r\n    result = [];\r\n\r\n    // outerWidth : 브라우저 윈도우의 사이드바와 가장자리 경계선을 포함한 폭.\r\n    // screen.availWidth : OS의 상태바나 작업 표시줄을 제외한 폭.\r\n    maxSW = Utils.isMobileDevice() ? window.outerWidth : window.screen.availWidth;\r\n    maxSH = Utils.isMobileDevice() ? window.outerHeight : window.screen.availHeight;\r\n\r\n    // Obtain the screen orientation.\r\n    if (Utils.isNwjs()) {\r\n        type = (maxSW > maxSH) ? 'landscape' : 'portrait';\r\n        if (maxSW === maxSH) type = 'landscape';\r\n    } else {\r\n        type = screen.orientation.type.match(/landscape/) ? 'landscape' : 'portrait';\r\n    }\r\n\r\n    data = (Utils.isNwjs()) ? RS.ScreenManager.Params.settings.pcGraphicsArray : RS.ScreenManager.Params.settings.resolutionQualityOnMobile;\r\n    // if( Utils.isMobileDevice()) data = RS.ScreenManager.Params.settings.mobileGraphicsArray;\r\n\r\n    // Set a custom aspect ratio\r\n    config = new CustomScreenConfig(RS.ScreenManager.Params.settings.customAspectRatio[0], RS.ScreenManager.Params.settings.customAspectRatio[1]);\r\n\r\n    data = RS.ScreenManager.uniqArray(data);\r\n\r\n    data.forEach(function (i) {\r\n\r\n        var sw = 0;\r\n        var sh = 0;\r\n\r\n        if ('width' in i) {\r\n            sw = i.width;\r\n        } else {\r\n            sw = i[0];\r\n        }\r\n\r\n        if ('height' in i) {\r\n            sh = i.height;\r\n        } else {\r\n            sh = i[1];\r\n        }\r\n\r\n        tw = Number(sw);\r\n        th = Number(sh);\r\n\r\n        // Swap\r\n        if (type === 'portrait' && (maxSW > maxSH)) {\r\n            var temp = tw;\r\n            tw = th;\r\n            th = temp;\r\n        }\r\n\r\n        if (tw >= 0 && tw <= maxSW && th >= 0 && th <= maxSH) {\r\n\r\n            // Convert the screen using an Aspect Ratio\r\n            if (RS.ScreenManager.Params.options.aspectRatio) {\r\n                temp = config.getSize(tw);\r\n                tw = temp[0];\r\n                th = temp[1];\r\n            }\r\n\r\n            pt = new Point(tw, th);\r\n            gArray.push(pt);\r\n            result.push(pt.toString());\r\n\r\n        } else {\r\n\r\n            if (RS.ScreenManager.Params.options.allResolutions) {\r\n\r\n                // Convert the screen using an Aspect Ratio\r\n                if (RS.ScreenManager.Params.options.aspectRatio) {\r\n                    temp = config.getSize(tw);\r\n                    tw = temp[0];\r\n                    th = temp[1];\r\n                }\r\n\r\n                pt = new Point(tw, th);\r\n                gArray.push(pt);\r\n                result.push(pt.toString());\r\n\r\n            }\r\n        }\r\n\r\n    }, this);\r\n\r\n    return (returnType === 'String') ? result : gArray;\r\n\r\n};\r\n\r\nGraphics.getOrientation = function (inner) {\r\n    var maxSW = (inner === true) ? window.innerWidth : window.screen.availWidth;\r\n    var maxSH = (inner === true) ? window.innerHeight : window.screen.availHeight;\r\n    var orientation = 'landscape';\r\n    if (Utils.isNwjs() || !screen.orientation) {\r\n        orientation = (maxSW > maxSH) ? 'landscape' : 'portrait';\r\n        if (maxSW === maxSH) orientation = 'landscape';\r\n    } else {\r\n        orientation = screen.orientation.type.match(/landscape/) ? 'landscape' : 'portrait';\r\n    }\r\n    return orientation;\r\n};\r\n\r\nGraphics.isAvailScreenHeight = function (height) {\r\n    var task_height = screen.height - screen.availHeight;\r\n    var maxHeight = screen.availHeight - task_height;\r\n    return height <= maxHeight;\r\n};\r\n\r\nGraphics.uniqWithPoint = function (data, callback) {\r\n    var ret = [];\r\n    ret = data.filter(function (e, i, a) {\r\n\r\n        if (a[i - 1] instanceof Point) {\r\n\r\n            if (a[i - 1].x === e.x && a[i - 1].y === e.y) {\r\n\r\n                return false;\r\n\r\n            }\r\n\r\n            return true;\r\n\r\n        } else {\r\n\r\n            return true;\r\n\r\n        }\r\n    });\r\n\r\n    callback(ret);\r\n\r\n};\r\n\r\nGraphics.getVirtualWidth = function (originValue) {\r\n    var ratio = 816.0 / Graphics.boxWidth;\r\n    return Math.floor(originValue / ratio);\r\n};\r\n\r\nGraphics.getVirtualHeight = function (originValue) {\r\n    var ratio = 624.0 / Graphics.boxHeight;\r\n    return Math.floor(originValue / ratio);\r\n};\r\n\r\nGraphics.setScreenResize = function (newScr) {\r\n    var cx, cy, xPadding, yPadding;\r\n    var tw, th, minW, minH;\r\n    var orientation, config, aspectRatio;\r\n    var maxSW, maxSH;\r\n    var temp;\r\n\r\n    var taskHeight = 0;\r\n\r\n    // Get the screen width and height (Excepted in Windows Taskbar)\r\n    maxSW = window.screen.availWidth;\r\n    maxSH = window.screen.availHeight;\r\n\r\n    // Get an orientation in your screen\r\n    orientation = this.getOrientation(false);\r\n\r\n    // Get an aspect ratio of a new screen size.\r\n    config = new ScreenConfig(newScr.x, newScr.y, orientation);\r\n    aspectRatio = config._aspectRatio || [17, 13];\r\n\r\n    if (RS.ScreenManager.Params.options.aspectRatio) {\r\n        config = new CustomScreenConfig(RS.ScreenManager.Params.settings.customAspectRatio[0], RS.ScreenManager.Params.settings.customAspectRatio[1]);\r\n        aspectRatio = config._aspectRatio;\r\n        temp = config.getSize(newScr.x);\r\n        newScr.x = temp[0];\r\n        newScr.y = temp[1];\r\n    }\r\n\r\n    SceneManager._screenWidth = newScr.x;\r\n    SceneManager._screenHeight = newScr.y;\r\n    SceneManager._boxWidth = newScr.x;\r\n    SceneManager._boxHeight = newScr.y;\r\n\r\n    // 화면 중앙 좌표\r\n    cx = (window.screen.availWidth / 2) - (newScr.x / 2);\r\n    cy = (window.screen.availHeight / 2) - (newScr.y / 2);\r\n\r\n    // 화면 패딩\r\n    xPadding = window.outerWidth - window.innerWidth;\r\n    yPadding = window.outerHeight - window.innerHeight;\r\n\r\n    // 타일 크기\r\n    tw = ($gameMap && $gameMap.tileWidth) ? $gameMap.tileWidth() : 48;\r\n    th = ($gameMap && $gameMap.tileHeight) ? $gameMap.tileHeight() : 48;\r\n\r\n    // 최소 크기\r\n    minW = (tw * aspectRatio[0]) || Graphics._renderer.width;\r\n    minH = (th * aspectRatio[1]) || Graphics._renderer.height;\r\n\r\n    // 작업 표시줄의 크기 때문에 수용할 수 없는 해상도라면 한 단계 낮춘다.\r\n    if (RS.ScreenManager.isWindowsTaskbarShown() &&\r\n        !this.isAvailScreenHeight(newScr.y) &&\r\n        !Utils.isMobileDevice() &&\r\n        RS.ScreenManager.Params.options.autoScaling) {\r\n\r\n        var data = Graphics.getAvailGraphicsArray('Number');\r\n        var ret = [];\r\n\r\n        this.uniqWithPoint(data.slice(0), function (newData) {\r\n            ret = newData;\r\n        });\r\n\r\n        ret = ret.filter(function (i) {\r\n            return i.y < (newScr.y);\r\n        }, this);\r\n\r\n        var item = ret.pop();\r\n\r\n        if (item) {\r\n            newScr = item;\r\n        }\r\n    }\r\n\r\n    // 화면 크기를 절대 값으로 지정\r\n    window.resizeTo(newScr.x + xPadding, newScr.y + yPadding);\r\n    window.moveTo(cx, cy);\r\n\r\n    // 해상도 최소값 & 최대값 설정 부분, 자동으로 조절하는 것에 맞겼다면.\r\n    if (RS.ScreenManager.Params.options.autoScaling && (tw / th >= 1.0) && tw >= 48) {\r\n\r\n        // 새로운 해상도 값이 최소값(tileWidth * aspectRatio) 값보다 작으면 해상도를 최소값으로 제한한다.\r\n        if (RS.ScreenManager.Params.options.minWidth) Graphics.width = Graphics.boxWidth = Math.max(minW, newScr.x);\r\n        if (RS.ScreenManager.Params.options.minHeight) Graphics.height = Graphics.boxHeight = Math.max(minH, newScr.y);\r\n\r\n        // 최소 최대 제한이 없을 경우,\r\n        if (!RS.ScreenManager.Params.options.minWidth && !RS.ScreenManager.Params.options.minHeight) {\r\n            Graphics.width = Graphics.boxWidth = newScr.x.clamp(minW, window.outerWidth);\r\n            Graphics.height = Graphics.boxHeight = newScr.x.clamp(minH, window.outerHeight);\r\n        }\r\n\r\n    } else {\r\n        // 그냥 설정한다.\r\n        Graphics.width = Graphics.boxWidth = newScr.x;\r\n        Graphics.height = Graphics.boxHeight = newScr.y;\r\n    }\r\n\r\n    // Reset graphics' size\r\n    if (RS.ScreenManager.Params.options.resize) {\r\n        Graphics._renderer.resize(newScr.x, newScr.y);\r\n    }\r\n\r\n    // Reset the scene (Unsaved changes will be lost)\r\n    if (RS.ScreenManager.Params.options.recreate && !(SceneManager._scene instanceof Scene_Boot)) {\r\n        if (SceneManager._scene) SceneManager.push(SceneManager._scene.constructor);\r\n    }\r\n\r\n};\r\n\r\n/**\r\n * Disarms the behavior of Community_Basic plugin.\r\n */\r\nif (PluginManager._scripts.contains(\"Community_Basic\")) {\r\n    SceneManager.initNwjs = function () {\r\n        if (Utils.isNwjs()) {\r\n            var gui = require('nw.gui');\r\n            var win = gui.Window.get();\r\n            if (process.platform === 'darwin' && !win.menu) {\r\n                var menubar = new gui.Menu({\r\n                    type: 'menubar'\r\n                });\r\n                var option = {\r\n                    hideEdit: true,\r\n                    hideWindow: true\r\n                };\r\n                menubar.createMacBuiltin('Game', option);\r\n                win.menu = menubar;\r\n            }\r\n        }\r\n    };\r\n};\r\n\r\n/**\r\n * Disarms the behavior of YEP_CoreEngine and ScreenResolution plugins.\r\n */\r\nif (SceneManager.run.toString().match(/Yanfly/i)) {\r\n    SceneManager.run = function (sceneClass) {\r\n        try {\r\n            this.initialize();\r\n            this.goto(sceneClass);\r\n            this.requestUpdate();\r\n        } catch (e) {\r\n            this.catchException(e);\r\n        }\r\n    };\r\n}\r\n\r\nvar alias_Graphics_onWindowResize = Graphics._onWindowResize;\r\nGraphics._onWindowResize = function () {\r\n    alias_Graphics_onWindowResize.call(this);\r\n    if (Utils.isNwjs()) {\r\n        //   var canvas = document.querySelector('canvas');\r\n        //   var dx = parseInt(canvas.style.width);\r\n        //   var dy = parseInt(canvas.style.height);\r\n        //   var xPadding = window.outerWidth - window.innerWidth;\r\n        //   var yPadding = window.outerHeight - window.innerHeight;\r\n        //   var cx = (window.screen.availWidth / 2) - (Graphics.boxWidth / 2);\r\n        //   var cy = (window.screen.availHeight / 2) - (Graphics.boxHeight / 2);\r\n        //   if(dx !== Graphics.boxWidth) {\r\n        //     var mx = (Graphics.boxWidth - dx);\r\n        //     var my = (Graphics.boxHeight - dy);\r\n        //     window.resizeTo(\r\n        //       parseInt(Graphics.boxWidth - mx + xPadding),\r\n        //       parseInt(Graphics.boxHeight - my + yPadding)\r\n        //     );\r\n        //   }\r\n        if (!nw) var nw = require(\"nw.gui\");\r\n        var win = nw.Window.get();\r\n        win.setPosition(\"center\");\r\n    }\r\n};\r\n","//============================================================================\r\n// Scene_Boot\r\n//============================================================================\r\n\r\nvar alias_Scene_Boot_create = Scene_Boot.prototype.create;\r\nScene_Boot.prototype.create = function () {\r\n    alias_Scene_Boot_create.call(this);\r\n    SceneManager.initResolution();\r\n};","//============================================================================\r\n// SceneManager\r\n//============================================================================\r\n\r\nSceneManager.initResolution = function () {\r\n    var self = this;\r\n    var type, size, orientation, config, mobile;\r\n    var sw, sh, bw, bh;\r\n    var maxSW, maxSH;\r\n    var defScrWidth, defScrHeight;\r\n\r\n    RS.ScreenManager.readManifestFile();\r\n\r\n    maxSW = window.innerWidth;\r\n    maxSH = window.innerHeight;\r\n\r\n    // Sets the default screen width and height values.\r\n    defScrWidth = RS.ScreenManager.Params.settings.defaultScreenSize.x;\r\n    defScrHeight = RS.ScreenManager.Params.settings.defaultScreenSize.y;\r\n\r\n    // Obtains the ratio depended on screen orientation.\r\n    orientation = Graphics.getOrientation(true);\r\n    config = new ScreenConfig(maxSW, maxSH, orientation);\r\n\r\n    // Changes the resolution depended on the aspect ratio in the mobile device.\r\n    size = config.getSize(defScrWidth);\r\n\r\n    mobile = Utils.isMobileDevice() || RS.ScreenManager.options.aspectRatio;\r\n    sw = (mobile === true) ? size[0] : defScrWidth;\r\n    sh = (mobile === true) ? size[1] : defScrHeight;\r\n    bw = (mobile === true) ? size[0] : defScrWidth;\r\n    bh = (mobile === true) ? size[1] : defScrHeight;\r\n\r\n    // Calls the function changes the resolution in case of the PC.\r\n    if (Utils.isNwjs()) {\r\n        var newSize = new Point(sw, sh);\r\n        Graphics.setScreenResize(newSize);\r\n    } else {\r\n        Graphics.width = sw;\r\n        Graphics.height = sh;\r\n        Graphics.boxWidth = sw;\r\n        Graphics.boxHeight = sh;\r\n    }\r\n};","//============================================================================\r\n//#region ScreenManager\r\n//============================================================================\r\n\r\nfunction ScreenManager() {\r\n    this.initialize.apply(this, arguments);\r\n}\r\n\r\nScreenManager.prototype = Object.create(Scene_Base.prototype);\r\nScreenManager.prototype.constructor = ScreenManager;\r\n\r\nScreenManager.prototype.initialize = function () {\r\n    Scene_Base.prototype.initialize.call(this);\r\n};\r\n\r\nScreenManager.prototype.create = function () {\r\n    Scene_Base.prototype.create.call(this);\r\n\r\n    this.createWindowLayer();\r\n    this.createAvailGraphicsList();\r\n    this.createPanel();\r\n\r\n};\r\n\r\nScreenManager.prototype.makeSpriteForPanel = function (height) {\r\n    var color1 = Window_Base.prototype.dimColor1();\r\n    var color2 = Window_Base.prototype.dimColor2();\r\n    var x = 0;\r\n    var y = 0;\r\n    var width = Math.floor(Graphics.boxWidth / 3);\r\n    var sprite = new Sprite(new Bitmap(width, height * 2));\r\n\r\n    if(navigator.userAgent.match(/Chrome/)) {\r\n    sprite.bitmap.fillAll(color1);\r\n    } else {\r\n    sprite.bitmap.gradientFillRect(x, y, Math.floor(width / 2), height, color2, color1);\r\n    sprite.bitmap.gradientFillRect(Math.floor(x + width / 2), y, Math.floor(width / 2), height, color1, color2);\r\n    }\r\n    sprite.bitmap.drawText(RS.ScreenManager.localization.get(\"Display Resolutions\"), x, y, width, height, 'center');\r\n\r\n    return sprite;\r\n\r\n};\r\n\r\nScreenManager.prototype.createPanel = function () {\r\n    var height = Math.floor(Graphics.boxHeight / 17);\r\n    var nx = this._availGraphicsList.x;\r\n    var ny = this._availGraphicsList.y - height - 10;\r\n\r\n    this._panel = this.makeSpriteForPanel(height);\r\n    this.setPosition(this._panel, nx, ny).addChild(this._panel);\r\n\r\n};\r\n\r\nScreenManager.prototype.setPosition = function (type, x, y) {\r\n    if(!type) return;\r\n\r\n    type.x = x;\r\n    type.y = y;\r\n\r\n    return this;\r\n\r\n};\r\n\r\nScreenManager.prototype.setHandler = function () {\r\n    if(!this._availGraphicsList) return;\r\n\r\n    this._availGraphicsList.setHandler('ok', this.convertScreenSize.bind(this));\r\n    this._availGraphicsList.setHandler('cancel', this.popScene.bind(this));\r\n\r\n    return this;\r\n\r\n};\r\n\r\nScreenManager.prototype.createDisplayList = function (x, y, width, height) {\r\n    var ClassType = Utils.isNwjs() ? Window_ResolutionList : Window_ResolutionListForMobile;\r\n\r\n    return new ClassType(x, y, width, height);\r\n\r\n};\r\n\r\nScreenManager.prototype.createAvailGraphicsList = function () {\r\n    var width = Math.floor(Graphics.boxWidth / 3);\r\n    var height = Math.floor(Graphics.boxWidth / 2.5);\r\n    var nx = Graphics.boxWidth / 2 - (width / 2);\r\n    var ny = Graphics.boxHeight / 2 - (height / 2);\r\n\r\n    this._availGraphicsList = this.createDisplayList(0, 0, width, height);\r\n    this.setPosition(this._availGraphicsList, nx, ny )\r\n    .setHandler()\r\n    .addWindow(this._availGraphicsList);\r\n\r\n};\r\n\r\nScreenManager.prototype.convertWithAspectRatio = function () {\r\n    var config = new CustomScreenConfig(RS.ScreenManager.Params.settings.customAspectRatio[0], RS.ScreenManager.Params.settings.customAspectRatio[1]);\r\n    var insData = parseInt(window.screen.availWidth / RS.ScreenManager.Params.settings.customAspectRatio[0]) * RS.ScreenManager.Params.settings.customAspectRatio[0];\r\n    var data = config.getSize(insData);\r\n\r\n    Graphics.setScreenResize(new Point(data[0], data[1]));\r\n\r\n};\r\n\r\nScreenManager.prototype.convertWithNwjs = function () {\r\n    var scr = this._availGraphicsList.getCurrentItemToPoint();\r\n\r\n    if(scr) {\r\n    Graphics.setScreenResize(scr);\r\n    } else {\r\n    this.convertWithAspectRatio();\r\n    }\r\n\r\n    if(this._availGraphicsList.item() === RS.ScreenManager.localization.get(\"Full Screen\") ||\r\n    this._availGraphicsList.item() === RS.ScreenManager.localization.get(\"Windowed Mode\")) {\r\n    RS.ScreenManager.switchFullScreen();\r\n    }\r\n\r\n};\r\n\r\nScreenManager.prototype.convertWithOther = function () {\r\n    var scr = this._availGraphicsList.getCurrentItemToPoint();\r\n\r\n    if(scr) {\r\n    var temp = [];\r\n    temp.push(RS.ScreenManager.Params.options.aspectRatio);\r\n    temp.push(RS.ScreenManager.Params.options.resize);\r\n    RS.ScreenManager.Params.options.resize = true;\r\n    RS.ScreenManager.Params.options.aspectRatio = true;\r\n    Graphics.setScreenResize(scr);\r\n    RS.ScreenManager.Params.options.resize = temp.pop();\r\n    RS.ScreenManager.Params.options.aspectRatio = temp.pop();\r\n\r\n    } else {\r\n\r\n    this.convertWithAspectRatio();\r\n\r\n    }\r\n};\r\n\r\nScreenManager.prototype.flushScreen = function () {\r\n    $gameSystem._lastScreenManagerItem = this._availGraphicsList.index();\r\n\r\n    this.popScene();\r\n\r\n};\r\n\r\nScreenManager.prototype.convertScreenSize = function () {\r\n    // PC인가?\r\n    if(Utils.isNwjs()) {\r\n\r\n    this.convertWithNwjs();\r\n\r\n    // 다른 플랫폼인가?\r\n    } else {\r\n\r\n    this.convertWithOther();\r\n\r\n    }\r\n\r\n    // 빠져나간다.\r\n    this.flushScreen();\r\n\r\n};\r\n\r\nwindow.ScreenManager = ScreenManager;\r\n\r\n//#endregion","//============================================================================\r\n// Game_System\r\n//============================================================================\r\n\r\nvar alias_Game_System_initialize = Game_System.prototype.initialize;\r\nGame_System.prototype.initialize = function() {\r\n    alias_Game_System_initialize.call(this);\r\n    this._lastScreenManagerItem = 0;\r\n};","//#region Option Window\r\n//============================================================================\r\n// Window_Options\r\n//============================================================================\r\n\r\nif (RS.ScreenManager.Params.isValidOptionWindow) {\r\n\r\n    var alias_Window_Options_initialize = Window_Options.prototype.initialize;\r\n    Window_Options.prototype.initialize = function () {\r\n        alias_Window_Options_initialize.call(this);\r\n        this._lastIndex = $gameSystem._lastScreenManagerItem || 0;\r\n    };\r\n\r\n    Window_Options.prototype.isResolution = function (symbol) {\r\n        return symbol.contains('Resolutions');\r\n    };\r\n\r\n    Window_Options.prototype.isAspectRatio = function (symbol) {\r\n        return symbol.contains('Aspect Ratio');\r\n    };\r\n\r\n    Window_Options.prototype.processOk = function () {\r\n        var index = this.index();\r\n        var symbol = this.commandSymbol(index);\r\n        var value = this.getConfigValue(symbol);\r\n        if (this.isVolumeSymbol(symbol)) {\r\n            value += this.volumeOffset();\r\n            if (value > 100) {\r\n                value = 0;\r\n            }\r\n            value = value.clamp(0, 100);\r\n            this.changeValue(symbol, value);\r\n        } else {\r\n            if (this.isResolution(symbol)) {\r\n                SceneManager.push(ScreenManager);\r\n            } else {\r\n                this.changeValue(symbol, !value);\r\n            }\r\n        }\r\n    };\r\n\r\n    var alias_Window_Options_cursorRight = Window_Options.prototype.cursorRight;\r\n    Window_Options.prototype.cursorRight = function (wrap) {\r\n        var index = this.index();\r\n        var symbol = this.commandSymbol(index);\r\n        if (!this.isResolution(symbol) || !this.isAspectRatio(symbol)) {\r\n            return alias_Window_Options_cursorRight.call(this, wrap);\r\n        }\r\n    };\r\n\r\n    var alias_Window_Options_cursorLeft = Window_Options.prototype.cursorLeft;\r\n    Window_Options.prototype.cursorLeft = function (wrap) {\r\n        var index = this.index();\r\n        var symbol = this.commandSymbol(index);\r\n        if (!this.isResolution(symbol) || !this.isAspectRatio(symbol)) {\r\n            return alias_Window_Options_cursorLeft.call(this, wrap);\r\n        }\r\n    };\r\n\r\n    Window_Options.prototype.statusText = function (idx) {\r\n        var symbol = this.commandSymbol(idx);\r\n        var value = this.getConfigValue(symbol);\r\n        if (this.isVolumeSymbol(symbol)) {\r\n            return this.volumeStatusText(value);\r\n        } else {\r\n            // 해상도 조절\r\n            if (this.isResolution(symbol)) {\r\n                idx = this._lastIndex;\r\n                var item;\r\n\r\n                // PC라면 해상도 표시\r\n                if (Utils.isNwjs()) {\r\n                    item = Graphics.getAvailGraphicsArray('String');\r\n                    if (!RS.ScreenManager.isFullscreen()) {\r\n                        item.push(RS.ScreenManager.localization.get(\"Full Screen\"));\r\n                    } else {\r\n                        item.push(RS.ScreenManager.localization.get(\"Windowed Mode\"));\r\n                    }\r\n                } else {\r\n                    // 그외 플랫폼은 낮음, 보통, 높음, 매우 높음으로 표시\r\n                    item = RS.ScreenManager.localization.get(\"MobileResolutions\");\r\n                }\r\n\r\n                return String(Graphics.boxWidth + \" x \" + Graphics.boxHeight);\r\n\r\n                // 종횡비 표시\r\n            } else {\r\n                if (this.isAspectRatio(symbol)) {\r\n                    return new ScreenConfig(0, 0, '').getRatioAsString(Graphics.boxWidth, Graphics.boxHeight);\r\n                } else {\r\n                    return this.booleanStatusText(value);\r\n                }\r\n            }\r\n        }\r\n    };\r\n\r\n    var alias_Window_Options_addVolumeOptions = Window_Options.prototype.addVolumeOptions;\r\n    Window_Options.prototype.addVolumeOptions = function () {\r\n        alias_Window_Options_addVolumeOptions.call(this);\r\n        this.addCommand(RS.ScreenManager.localization.get('Resolutions'), 'Resolutions');\r\n        this.addCommand(RS.ScreenManager.localization.get('Aspect Ratio'), 'Aspect Ratio');\r\n    };\r\n}","//============================================================================\r\n// Window_ResolutionList\r\n//============================================================================\r\n\r\nfunction Window_ResolutionList() {\r\n    this.initialize.apply(this, arguments);\r\n};\r\n\r\nWindow_ResolutionList.prototype = Object.create(Window_Selectable.prototype);\r\nWindow_ResolutionList.prototype.constructor = Window_ResolutionList;\r\n\r\nWindow_ResolutionList.prototype.initialize = function (x, y, width, height) {\r\n    Window_Selectable.prototype.initialize.call(this, x, y, width, height);\r\n\r\n    this.initMembers();\r\n    this.initWithItemPoint();\r\n    this.refresh();\r\n    this.activate();\r\n\r\n    this.select($gameSystem._lastScreenManagerItem || 0);\r\n\r\n};\r\n\r\nWindow_ResolutionList.prototype.initMembers = function () {\r\n    this._windowFrameSprite.visible = false;\r\n\r\n    this._index = 0;\r\n    this._item = [];\r\n\r\n};\r\n\r\nWindow_ResolutionList.prototype.lineHeight = function () {\r\n    return Math.round(Graphics.boxHeight / 16);\r\n};\r\n\r\nWindow_ResolutionList.prototype.initWithAspectRatio = function (data) {\r\n    if (RS.ScreenManager.Params.options.aspectRatio) {\r\n\r\n        var config = new CustomScreenConfig(RS.ScreenManager.Params.settings.customAspectRatio[0], RS.ScreenManager.Params.settings.customAspectRatio[1]);\r\n        var insData = parseInt(window.screen.availWidth / RS.ScreenManager.Params.settings.customAspectRatio[0]) * RS.ScreenManager.Params.settings.customAspectRatio[0];\r\n        var fullscreenData = config.getSize(insData);\r\n\r\n        data.push(new Point(fullscreenData[0], fullscreenData[1]));\r\n\r\n    }\r\n\r\n    return data;\r\n\r\n};\r\n\r\nWindow_ResolutionList.prototype.initWithItemPoint = function () {\r\n    var data = Graphics.getAvailGraphicsArray('Number');\r\n    var ret = [];\r\n\r\n    // 배열 내 중복된 데이터를 제거합니다.\r\n    this.uniqWithPoint(data.slice(0), function (newData) {\r\n        ret = newData;\r\n    });\r\n\r\n    ret = this.initWithAspectRatio(ret);\r\n\r\n    this._itemToPoint = ret;\r\n};\r\n\r\nWindow_ResolutionList.prototype.uniqWithPoint = function (data, callback) {\r\n    var ret = [];\r\n    ret = data.filter(function (e, i, a) {\r\n\r\n        if (a[i - 1] instanceof Point) {\r\n\r\n            if (a[i - 1].x === e.x && a[i - 1].y === e.y) {\r\n\r\n                return false;\r\n\r\n            }\r\n\r\n            return true;\r\n\r\n        } else {\r\n\r\n            return true;\r\n\r\n        }\r\n    });\r\n\r\n    callback(ret);\r\n\r\n};\r\n\r\nWindow_ResolutionList.prototype.getCurrentItemToPoint = function () {\r\n    return this._itemToPoint && this._index >= 0 ? this._itemToPoint[this._index] : null;\r\n};\r\n\r\nWindow_ResolutionList.prototype.maxItems = function () {\r\n    return this._data ? this._data.length : 1;\r\n};\r\n\r\nWindow_ResolutionList.prototype.item = function () {\r\n    return this._data && this._index >= 0 ? this._data[this._index] : null;\r\n};\r\n\r\nWindow_ResolutionList.prototype.makeItemList = function () {\r\n    this._data = Graphics.getAvailGraphicsArray('String');\r\n    if (RS.ScreenManager.Params.options.aspectRatio) this._data = this.uniq(this._data.slice(0));\r\n    if (!RS.ScreenManager.isFullscreen()) {\r\n        this._data.push(RS.ScreenManager.localization.get(\"Full Screen\"));\r\n    } else {\r\n        this._data.push(RS.ScreenManager.localization.get(\"Windowed Mode\"));\r\n    }\r\n};\r\n\r\nWindow_ResolutionList.prototype.isCurrentItemEnabled = function () {\r\n    return this.isEnabled(this._data[this.index()]);\r\n};\r\n\r\nWindow_ResolutionList.prototype.isEnabled = function (item) {\r\n    return !!item;\r\n};\r\n\r\nWindow_ResolutionList.prototype.resetFontSettings = function () {\r\n    this.contents.fontFace = this.standardFontFace();\r\n    this.contents.fontSize = this.standardFontSize();\r\n    this.contents.outlineColor = Utils.rgbToCssColor(128, 0, 0);\r\n    this.contents.outlineWidth = 2;\r\n    this.resetTextColor();\r\n};\r\n\r\nWindow_ResolutionList.prototype.drawItem = function (index) {\r\n    var rect = this.itemRectForText(index);\r\n    var text = this._data[index];\r\n\r\n    this.resetTextColor();\r\n\r\n    this.drawText(text, rect.x, rect.y, rect.width, 'center');\r\n\r\n};\r\n\r\nWindow_ResolutionList.prototype.refresh = function () {\r\n    this.makeItemList();\r\n    this.createContents();\r\n    this.drawAllItems();\r\n};\r\n\r\nWindow_ResolutionList.prototype.uniq = function (data) {\r\n    data = data.filter(function (e, i, a) {\r\n        return a.indexOf(e) === i;\r\n    }, this);\r\n    return data;\r\n};\r\n//#endregion\r\n\r\n//============================================================================\r\n//#region Window_ResolutionListForMobile\r\n//============================================================================\r\n/**\r\n * PC가 아닌 플랫폼에서는 창 사이즈가 변경되지 않으므로 그래픽 객체 크기를 변경한다.\r\n * @class Window_ResolutionListForMobile\r\n */\r\nfunction Window_ResolutionListForMobile() {\r\n    this.initialize.apply(this, arguments);\r\n};\r\n\r\nWindow_ResolutionListForMobile.prototype = Object.create(Window_ResolutionList.prototype);\r\nWindow_ResolutionListForMobile.prototype.constructor = Window_ResolutionListForMobile;\r\n\r\nWindow_ResolutionListForMobile.prototype.initialize = function (x, y, width, height) {\r\n    Window_ResolutionList.prototype.initialize.call(this, x, y, width, height);\r\n};\r\n\r\nWindow_ResolutionListForMobile.prototype.initWithItemPoint = function () {\r\n    var temp = RS.ScreenManager.Params.options.allResolutions;\r\n    var ret, data = Graphics.getAvailGraphicsArray(\"Number\");\r\n    RS.ScreenManager.Params.options.allResolutions = temp;\r\n\r\n    ret = this.initWithAspectRatio(data);\r\n\r\n    this._itemToPoint = ret;\r\n};\r\n\r\nWindow_ResolutionListForMobile.prototype.lineHeight = function () {\r\n    return Math.round(Graphics.boxHeight / 10);\r\n};\r\n\r\nWindow_ResolutionListForMobile.prototype.makeItemList = function () {\r\n    this._data = RS.ScreenManager.localization.get(\"MobileResolutions\");\r\n};\r\n\r\nWindow_ResolutionListForMobile.prototype.getCurrentItemToPoint = function () {\r\n    return this._itemToPoint && this._index >= 0 ? this._itemToPoint[this._index] : null;\r\n};\r\n\r\nWindow_ResolutionListForMobile.prototype.drawItem = function (index) {\r\n    var rect = this.itemRectForText(index);\r\n    var text = this._data[index];\r\n    this.resetTextColor();\r\n    this.drawText(text, rect.x, rect.y, rect.width, 'center');\r\n};\r\n\r\nwindow.Window_ResolutionList = Window_ResolutionList;\r\nwindow.Window_ResolutionListForMobile = Window_ResolutionListForMobile;\r\n\r\n//#endregion","//============================================================================\r\n//#region Sprite_Base\r\n//============================================================================\r\n\r\nSprite_Base.prototype.requestStretch = function (sprite) {\r\n    if (!sprite.bitmap) return;\r\n    var bitmap = sprite.bitmap;\r\n    if (bitmap.width <= 0) return;\r\n    if (bitmap.height <= 0) return;\r\n    var scaleX = Graphics.boxWidth / bitmap.width;\r\n    var scaleY = Graphics.boxHeight / bitmap.height;\r\n    sprite.scale.x = (scaleX > 1.0) ? scaleX : 1.0;\r\n    sprite.scale.y = (scaleY > 1.0) ? scaleY : 1.0;\r\n\r\n    if (RS.ScreenManager.Params.picturePosType === \"Virtual Coordinates\") {\r\n        var x = sprite.x;\r\n        var y = sprite.y;\r\n        var sw = bitmap.width * sprite.scale.x; // scale width and height\r\n        var sh = bitmap.height * sprite.scale.y;\r\n        var dw = bitmap.width; // original width and original height\r\n        var dh = bitmap.height;\r\n\r\n        if (dw == 0 || dh == 0) {\r\n            return;\r\n        }\r\n\r\n        var dx = x * (sw / dw); // destination position\r\n        var dy = y * (sh / dh);\r\n\r\n        // position\r\n        sprite.x = Math.floor(dx);\r\n        sprite.y = Math.floor(dy);\r\n\r\n    }\r\n\r\n};\r\n//#endregion\r\n\r\n//============================================================================\r\n//#region TilingSprite\r\n//============================================================================\r\nTilingSprite.prototype.reqeustResizeImage = function () {\r\n\r\n    if (!this.texture.frame) {\r\n        this.texture.frame = new PIXI.Rectangle(0, 0, Graphics.boxWidth, Graphics.boxHeight);\r\n    }\r\n\r\n    this.texture.frame.width = Graphics.boxWidth;\r\n    this.texture.frame.height = Graphics.boxHeight;\r\n\r\n}\r\n\r\nTilingSprite.prototype.isValidResizing = function () {\r\n    if (!RS.ScreenManager.Params.isValidScaledBattleback) return;\r\n    if (!this.bitmap) return false;\r\n    if (this.bitmap.width <= 0) return false;\r\n    if (this.bitmap.height <= 0) return false;\r\n    if (!this.visible) return false;\r\n    if (this.opacity <= 0) return false;\r\n    if (!this.bitmap._url) return false;\r\n    if (!this.texture) return false;\r\n\r\n    var url = this.bitmap._url;\r\n    var fileUri = url.split(\"/\");\r\n    var filename = fileUri.pop();\r\n    var folderName = fileUri.pop();\r\n\r\n    if (['battlebacks1', 'battlebacks2'].contains(folderName)) {\r\n        this._folderName = folderName;\r\n        return true;\r\n    }\r\n\r\n    return false;\r\n\r\n};\r\n\r\nTilingSprite.prototype.resizeImage = function () {\r\n    if (this.isValidResizing()) {\r\n        this.reqeustResizeImage();\r\n    }\r\n};\r\n\r\nvar alias_TilingSprite__onBitmapLoad = TilingSprite.prototype._onBitmapLoad;\r\nTilingSprite.prototype._onBitmapLoad = function () {\r\n    alias_TilingSprite__onBitmapLoad.call(this);\r\n    this.resizeImage();\r\n};\r\n\r\n//#endregion\r\n\r\n//============================================================================\r\n// Sprite_Actor\r\n//============================================================================  \r\n\r\n// These functions are worked fine in the vanilla mode only!!\r\n// I couldn't test the impact yet when using the plugin named YEP_BattleEngineCore.\r\nif (!Imported.YEP_BattleEngineCore) {\r\n\r\n    Sprite_Actor.prototype.moveToStartPosition = function () {\r\n        eval($.Params.actorFunc.moveToStartPosition);\r\n    };\r\n\r\n    Sprite_Actor.prototype.setActorHome = function (index) {\r\n        eval($.Params.actorFunc.setActorHome);\r\n    };\r\n\r\n    Sprite_Actor.prototype.stepForward = function () {\r\n        eval($.Params.actorFunc.stepForward);\r\n    };\r\n\r\n    Sprite_Actor.prototype.stepBack = function () {\r\n        eval($.Params.actorFunc.stepBack);\r\n    };\r\n\r\n    Sprite_Actor.prototype.retreat = function () {\r\n        eval($.Params.actorFunc.retreat);\r\n    };\r\n\r\n}\r\n\r\n//============================================================================\r\n// Spriteset_Battle\r\n//============================================================================    \r\n\r\nif (RS.ScreenManager.Params.isValidScaledBattleback) {\r\n\r\n    /**\r\n     * Override\r\n     * @method createBattleback\r\n     */\r\n    Spriteset_Battle.prototype.createBattleback = function () {\r\n        var margin = 0;\r\n        var x = -this._battleField.x - margin;\r\n        var y = -this._battleField.y - margin;\r\n        var width = Graphics.width + margin * 2;\r\n        var height = Graphics.height + margin * 2;\r\n        this._back1Sprite = new TilingSprite();\r\n        this._back2Sprite = new TilingSprite();\r\n        this._back1Sprite.bitmap = this.battleback1Bitmap();\r\n        this._back2Sprite.bitmap = this.battleback2Bitmap();\r\n        this._back1Sprite.move(x, y, width, height);\r\n        this._back2Sprite.move(x, y, width, height);\r\n        this._battleField.addChild(this._back1Sprite);\r\n        this._battleField.addChild(this._back2Sprite);\r\n    };\r\n\r\n    /**\r\n     * Override\r\n     * @method locateBattleback\r\n     */\r\n    Spriteset_Battle.prototype.locateBattleback = function () {\r\n\r\n        var sprite1 = this._back1Sprite;\r\n        var sprite2 = this._back2Sprite;\r\n        sprite1.origin.x = 0;\r\n        sprite2.origin.x = 0;\r\n        if ($gameSystem.isSideView()) {\r\n            sprite1.origin.y = 0;\r\n            sprite2.origin.y = 0;\r\n        }\r\n\r\n    };\r\n\r\n}\r\n\r\n//============================================================================\r\n//#region Sprite_Picture\r\n//============================================================================  \r\n\r\n(function () {\r\n\r\n    /**\r\n     * Find a script called \"DTextPicture.js\"\r\n     */\r\n    PluginManager._scripts.forEach(function (pluginName) {\r\n        if (pluginName === \"DTextPicture\") {\r\n            Imported.DTextPicture = true;\r\n        }\r\n    }, this);\r\n\r\n})();\r\n\r\nvar alias_Sprite_Picture_updatePosition = Sprite_Picture.prototype.updatePosition;\r\nSprite_Picture.prototype.updatePosition = function () {\r\n    if (RS.ScreenManager.Params.isAutoScaledPicture) return;\r\n    alias_Sprite_Picture_updatePosition.call(this);\r\n};\r\n\r\nvar alias_Sprite_Picture_updateScale = Sprite_Picture.prototype.updateScale;\r\nSprite_Picture.prototype.updateScale = function () {\r\n    if (RS.ScreenManager.Params.isAutoScaledPicture) return;\r\n    alias_Sprite_Picture_updateScale.call(this);\r\n};\r\n\r\nSprite_Picture.prototype.updateOriginScale = function () {\r\n    var picture = this.picture();\r\n    this.x = Math.floor(picture.x());\r\n    this.y = Math.floor(picture.y());\r\n    var originSX = picture.scaleX() / 100;\r\n    var originSY = picture.scaleY() / 100;\r\n    this.scale.x = originSX;\r\n    this.scale.y = originSY;\r\n};\r\n\r\nSprite_Picture.prototype.updateAutoScale = function () {\r\n\r\n    /**\r\n     * @type {Game_Picture}\r\n     */\r\n    var picture = this.picture();\r\n    var bitmap = this.bitmap;\r\n\r\n    if (!bitmap) {\r\n        this.updateOriginScale();\r\n        return;\r\n    }\r\n\r\n    // Sometimes the game picture has to use a default scale.\r\n    var blacklist = RS.ScreenManager.Params.ignoreAutoScalePictures || [];\r\n    if (blacklist.contains(this._pictureId)) {\r\n        this.updateOriginScale();\r\n        return;\r\n    }\r\n\r\n    var originSX = picture.scaleX() / 100;\r\n    var originSY = picture.scaleY() / 100;\r\n\r\n    // Get the original width and height values\r\n    var dw = bitmap.width * originSX;\r\n    var dh = bitmap.height * originSY;\r\n\r\n    // Can not divide with 0\r\n    if (dw === 0 || dh === 0) {\r\n        this.updateOriginScale();\r\n        return;\r\n    }\r\n\r\n    // Store the original coordinates before changing its size.\r\n    var x = picture.x();\r\n    var y = picture.y();\r\n\r\n    var originalViewWidth = parseInt(RS.ScreenManager.Params.originalPictureViewSize.width);\r\n    var originalViewHeight = parseInt(RS.ScreenManager.Params.originalPictureViewSize.height);\r\n    var scaleX = originSX;\r\n    var scaleY = originSY;\r\n\r\n    if (Graphics.boxWidth > originalViewWidth) {\r\n        scaleX = Graphics.boxWidth / originalViewWidth;\r\n    } else if (Graphics.boxWidth < originalViewWidth) {\r\n        scaleX = originalViewWidth / Graphics.boxWidth;\r\n    }\r\n\r\n    scaleY = Graphics.boxHeight / originalViewHeight;\r\n\r\n    // Perform re-scale and re-position.\r\n    this.scale.x = scaleX;\r\n    this.scale.y = scaleY;\r\n\r\n    if (RS.ScreenManager.Params.picturePosType === \"Virtual Coordinates\") {\r\n\r\n        var sw = bitmap.width * scaleX;\r\n        var sh = bitmap.height * scaleY;\r\n        var dx = x * (sw / dw);\r\n        var dy = y * (sh / dh);\r\n\r\n        this.x = Math.floor(dx);\r\n        this.y = Math.floor(dy);\r\n\r\n    } else {\r\n\r\n        this.x = Math.floor(x);\r\n        this.y = Math.floor(y);\r\n\r\n    }\r\n\r\n};\r\n\r\nvar alias_Sprite_Picture_update = Sprite_Picture.prototype.update;\r\nSprite_Picture.prototype.update = function () {\r\n    alias_Sprite_Picture_update.call(this);\r\n    if (this.visible && RS.ScreenManager.Params.isAutoScaledPicture) {\r\n        this.updateAutoScale();\r\n    }\r\n};\r\n\r\n//#endregion\r\n\r\n//#region Rescaling Background\r\n//============================================================================\r\n// Scene_Base\r\n//============================================================================\r\n\r\nScene_Base.prototype.requestStretch = function (sprite) {\r\n    if (!sprite.bitmap) return;\r\n    var bitmap = sprite.bitmap;\r\n    if (bitmap.width <= 0) return;\r\n    if (bitmap.height <= 0) return;\r\n    var scaleX = Graphics.boxWidth / bitmap.width;\r\n    var scaleY = Graphics.boxHeight / bitmap.height;\r\n    sprite.scale.x = (scaleX > 1.0) ? scaleX : 1.0;\r\n    sprite.scale.y = (scaleY > 1.0) ? scaleY : 1.0;\r\n    sprite.x = Graphics.boxWidth / 2;\r\n    sprite.y = Graphics.boxHeight / 2;\r\n    sprite.anchor.x = 0.5;\r\n    sprite.anchor.y = 0.5;\r\n};\r\n\r\n//============================================================================\r\n// Scene_MenuBase\r\n//============================================================================\r\n\r\nvar alias_Scene_MenuBase_start = Scene_MenuBase.prototype.start;\r\nScene_MenuBase.prototype.start = function () {\r\n    alias_Scene_MenuBase_start.call(this);\r\n    this.requestStretch(this._backgroundSprite);\r\n};\r\n\r\n//============================================================================\r\n// Window\r\n//============================================================================\r\n\r\nif (RS.ScreenManager.Params.settings.defaultScreenSize.x <= 320 &&\r\n    RS.ScreenManager.Params.settings.defaultScreenSize.y <= 240) {\r\n    var alias_Window_Command_windowWidth = Window_Command.prototype.windowWidth;\r\n    Window_Command.prototype.windowWidth = function () {\r\n        return Graphics.getVirtualWidth(alias_Window_Command_windowWidth.call(this));\r\n    };\r\n\r\n    var alias_Window_Command_lineHeight = Window_Command.prototype.lineHeight;\r\n    Window_Command.prototype.lineHeight = function () {\r\n        return Graphics.getVirtualHeight(alias_Window_Command_lineHeight.call(this));\r\n    };\r\n\r\n    var alias_Window_Base_standardFontSize = Window_Base.prototype.standardFontSize;\r\n    Window_Base.prototype.standardFontSize = function () {\r\n        return Graphics.getVirtualHeight(alias_Window_Base_standardFontSize.call(this));\r\n    };\r\n\r\n    var alias_Window_Base_standardPadding = Window_Base.prototype.standardPadding;\r\n    Window_Base.prototype.standardPadding = function () {\r\n        return Graphics.getVirtualWidth(alias_Window_Base_standardPadding.call(this));\r\n    };\r\n\r\n    var alias_Window_Selectable_spacing = Window_Selectable.prototype.spacing;\r\n    Window_Selectable.prototype.spacing = function () {\r\n        return Graphics.getVirtualWidth(alias_Window_Selectable_spacing.call(this));\r\n    };\r\n\r\n    var alias_Window_Options_windowWidth = Window_Options.prototype.windowWidth;\r\n    Window_Options.prototype.windowWidth = function () {\r\n        return Graphics.getVirtualWidth(alias_Window_Options_windowWidth.call(this));\r\n    };\r\n\r\n    var alias_Window_Options_statusWidth = Window_Options.prototype.statusWidth;\r\n    Window_Options.prototype.statusWidth = function () {\r\n        return Graphics.getVirtualWidth(alias_Window_Options_statusWidth.call(this));\r\n    };\r\n\r\n    class Window_MenuCommandImpl extends Window_MenuCommand {\r\n        windowWidth() {\r\n            return Graphics.getVirtualWidth(super.windowWidth());\r\n        }\r\n    }\r\n\r\n    window.Window_MenuCommand = Window_MenuCommandImpl;\r\n\r\n    class Window_MenuStatusImpl extends Window_MenuStatus {\r\n        windowWidth() {\r\n            return Graphics.boxWidth - Graphics.getVirtualWidth(240);\r\n        }\r\n    }\r\n\r\n    window.Window_MenuStatus = Window_MenuStatusImpl;\r\n\r\n    class Window_GoldImpl extends Window_Gold {\r\n        windowWidth() {\r\n            return Graphics.getVirtualWidth(super.windowWidth());\r\n        }\r\n    }\r\n\r\n    window.Window_Gold = Window_GoldImpl;\r\n\r\n    class Window_GameEndImpl extends Window_GameEnd {\r\n        windowWidth() {\r\n            return Graphics.getVirtualWidth(super.windowWidth());\r\n        }\r\n    }\r\n\r\n    window.Window_GameEnd = Window_GameEndImpl;\r\n}\r\n\r\n//============================================================================\r\n// Scene_Title\r\n//============================================================================\r\n\r\nclass Window_TitleCommandImpl extends Window_TitleCommand {\r\n\r\n    updatePlacement() {\r\n        this.x = (Graphics.boxWidth - this.width) / 2;\r\n        this.y = Graphics.boxHeight - this.height - Graphics.getVirtualHeight(96);\r\n    }\r\n\r\n    windowWidth() {\r\n        return Graphics.getVirtualWidth(super.windowWidth());\r\n    }\r\n\r\n}\r\n\r\nwindow.Window_TitleCommand = Window_TitleCommandImpl;\r\n\r\nvar alias_Scene_Title_start = Scene_Title.prototype.start;\r\nScene_Title.prototype.start = function () {\r\n    alias_Scene_Title_start.call(this);\r\n    this.requestStretch(this._backSprite1);\r\n    this.requestStretch(this._backSprite2);\r\n};\r\n\r\nScene_Title.prototype.drawGameTitle = function () {\r\n    var x = 20;\r\n    var y = Graphics.height / 4;\r\n    var maxWidth = Graphics.width - x * 2;\r\n    var text = $dataSystem.gameTitle;\r\n\r\n    this._gameTitleSprite.bitmap.outlineColor = 'black';\r\n    this._gameTitleSprite.bitmap.outlineWidth = Graphics.getVirtualWidth(8);\r\n    this._gameTitleSprite.bitmap.fontSize = Graphics.getVirtualHeight(72);\r\n    this._gameTitleSprite.bitmap.drawText(text, x, y, maxWidth, Graphics.getVirtualWidth(48), 'center');\r\n};\r\n\r\n//============================================================================\r\n// Scene_Gameover\r\n//============================================================================\r\n\r\nvar alias_Scene_Gameover_start = Scene_Gameover.prototype.start;\r\nScene_Gameover.prototype.start = function () {\r\n    alias_Scene_Gameover_start.call(this);\r\n    this.requestStretch(this._backSprite);\r\n};\r\n\r\n//#endregion","//============================================================================\r\n// Game_Interpreter\r\n//============================================================================\r\n\r\nvar alias_Game_Interpreter_pluginCommand = Game_Interpreter.prototype.pluginCommand;\r\nGame_Interpreter.prototype.pluginCommand = function (command, args) {\r\n    alias_Game_Interpreter_pluginCommand.call(this, command, args);\r\n    if (command === \"ScreenManager\") {\r\n        switch (args[0]) {\r\n            case 'Start':\r\n                if (Utils.isNwjs()) {\r\n                    SceneManager.push(ScreenManager);\r\n                }\r\n                break;\r\n        }\r\n    }\r\n};\r\n","\"use strict\";\r\n\r\nwindow.Imported = window.Imported || {};\r\nwindow.Imported.RS_ScreenManager = true;\r\n\r\nwindow.RS = window.RS || {};\r\nwindow.RS.ScreenManager = window.RS.ScreenManager || {};\r\nwindow.RS.ScreenManager.Params = window.RS.ScreenManager.Params || {};\r\n\r\nimport parameters from \"./parameters\";\r\n\r\nRS.ScreenManager.jsonParse = function (str) {\r\n    var retData = JSON.parse(str, function (k, v) {\r\n    try { return RS.ScreenManager.jsonParse(v); } catch (e) { return v; }\r\n    });\r\n    return retData;\r\n};\r\n\r\nvar getTargetRegex = /(\\d+)[ ]x[ ](\\d+)/i;\r\n\r\n/**\r\n * @type {{resize: Boolean, autoScaling: Boolean, minWidth: Boolean, minHeight: Boolean, recreate: Boolean, allResolutions: Boolean, aspectRatio: Boolean, isAutoSyncManifest: Boolean}}\r\n */\r\nvar options = {};\r\nvar settings = {};\r\n\r\noptions.resize = Boolean(parameters['isGraphicsRendererResize'] === 'true');\r\noptions.autoScaling = Boolean(parameters['isGraphicsRendererResize'] === 'true');\r\noptions.minWidth = Boolean(parameters['isMaintainingMinimumWidth'] === 'true');\r\noptions.minHeight = Boolean(parameters['isMaintainingMinimumHeight'] === 'true');\r\noptions.recreate = Boolean(parameters['isMaintainingMinimumHeight'] === 'true');\r\noptions.allResolutions = Boolean(parameters['Use All Resolutions'] === 'true');\r\noptions.aspectRatio = Boolean(parameters['Enable Custom Aspect Ratio'] === 'true');\r\noptions.isAutoSyncManifest = Boolean(parameters['Auto Sync Manifest file'] === 'true');\r\n\r\nsettings.customAspectRatio = parameters['Custom Aspect Ratio'] || \"16:9\";\r\nsettings.customAspectRatio = settings.customAspectRatio.trim().split(\":\");\r\nsettings.ptCustomScreenSize = String(parameters[\"Default Screen Size\"] || '1280 x 720').split(' x ');\r\nsettings.defaultScreenSize = new Point(\r\n    (parseInt(settings.ptCustomScreenSize[0]) || 1280),\r\n    (parseInt(settings.ptCustomScreenSize[1]) || 720));\r\nsettings.pcGraphicsArray = [];\r\nsettings.pcGraphicsTempArray = RS.ScreenManager.jsonParse(parameters[\"PC\"]);\r\nsettings.mobileGraphicsArray = RS.ScreenManager.jsonParse(parameters[\"Mobile\"]);\r\nsettings.resolutionQualityOnMobile = RS.ScreenManager.jsonParse(parameters[\"Mobile Simple\"]);\r\nsettings.state = \"ready\";\r\n\r\n// Parameters\r\nRS.ScreenManager.Params.settings = settings;\r\nRS.ScreenManager.Params.options = options;\r\nRS.ScreenManager.Params.fullscreenFlag = false;\r\nRS.ScreenManager.Params.isUsedNodeLibrary = Boolean(parameters[\"Bind Node Library\"] === \"true\");\r\n\r\nRS.ScreenManager.Params.isAutoScaledPicture = Boolean(parameters[\"Scaled Picture\"] === \"true\");\r\n\r\nRS.ScreenManager.Params.ignoreAutoScalePictures = RS.ScreenManager.jsonParse(parameters[\"Ignore Auto Scale\"]);\r\n\r\nRS.ScreenManager.Params.originalPictureViewSize = RS.ScreenManager.jsonParse(parameters[\"Original View Size\"]);\r\n\r\n/**\r\n * Screen Size : 1280, 720\r\n * Picture's Size : 816, 614,\r\n * Picture's Position : 816, 614\r\n * Actual Coordinates : 816, 614\r\n * Virtual Coordinates (Maintain ratio) : 1280, 720\r\n */\r\nRS.ScreenManager.Params.picturePosType = parameters[\"Picture Position Type\"] || \"Actual Coordinates\";\r\n\r\n/**\r\n * if it is to true, it adds resolution select button in the option window.\r\n */\r\nRS.ScreenManager.Params.isValidOptionWindow = Utils.isMobileDevice() ? false : true;\r\n\r\nRS.ScreenManager.Params.isValidScaledBattleback = Boolean(parameters[\"Scaled Battleback\"] === \"true\");\r\n\r\nRS.ScreenManager.Params.actorFunc = {\r\n    moveToStartPosition: RS.ScreenManager.jsonParse(parameters[\"ActorFunc.moveToStartPosition\"]),\r\n    setActorHome: RS.ScreenManager.jsonParse(parameters[\"ActorFunc.setActorHome\"]),\r\n    stepForward: RS.ScreenManager.jsonParse(parameters[\"ActorFunc.stepForward\"]),\r\n    stepBack: RS.ScreenManager.jsonParse(parameters[\"ActorFunc.stepBack\"]),\r\n    retreat: RS.ScreenManager.jsonParse(parameters[\"ActorFunc.retreat\"]),\r\n};"],"sourceRoot":""}